'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.34011
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="CREATIVOS")>  _
Partial Public Class DataClasses1DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertBaners(instance As Baners)
    End Sub
  Partial Private Sub UpdateBaners(instance As Baners)
    End Sub
  Partial Private Sub DeleteBaners(instance As Baners)
    End Sub
  Partial Private Sub InsertTickets(instance As Tickets)
    End Sub
  Partial Private Sub UpdateTickets(instance As Tickets)
    End Sub
  Partial Private Sub DeleteTickets(instance As Tickets)
    End Sub
  Partial Private Sub InsertClientes(instance As Clientes)
    End Sub
  Partial Private Sub UpdateClientes(instance As Clientes)
    End Sub
  Partial Private Sub DeleteClientes(instance As Clientes)
    End Sub
  Partial Private Sub InsertControl_Recargas_Claro(instance As Control_Recargas_Claro)
    End Sub
  Partial Private Sub UpdateControl_Recargas_Claro(instance As Control_Recargas_Claro)
    End Sub
  Partial Private Sub DeleteControl_Recargas_Claro(instance As Control_Recargas_Claro)
    End Sub
  Partial Private Sub InsertControl_Recargas_Tigo(instance As Control_Recargas_Tigo)
    End Sub
  Partial Private Sub UpdateControl_Recargas_Tigo(instance As Control_Recargas_Tigo)
    End Sub
  Partial Private Sub DeleteControl_Recargas_Tigo(instance As Control_Recargas_Tigo)
    End Sub
  Partial Private Sub InsertDeducciones(instance As Deducciones)
    End Sub
  Partial Private Sub UpdateDeducciones(instance As Deducciones)
    End Sub
  Partial Private Sub DeleteDeducciones(instance As Deducciones)
    End Sub
  Partial Private Sub InsertEmpleados(instance As Empleados)
    End Sub
  Partial Private Sub UpdateEmpleados(instance As Empleados)
    End Sub
  Partial Private Sub DeleteEmpleados(instance As Empleados)
    End Sub
  Partial Private Sub InsertInventario(instance As Inventario)
    End Sub
  Partial Private Sub UpdateInventario(instance As Inventario)
    End Sub
  Partial Private Sub DeleteInventario(instance As Inventario)
    End Sub
  Partial Private Sub InsertPrestamos(instance As Prestamos)
    End Sub
  Partial Private Sub UpdatePrestamos(instance As Prestamos)
    End Sub
  Partial Private Sub DeletePrestamos(instance As Prestamos)
    End Sub
  Partial Private Sub InsertRecibos(instance As Recibos)
    End Sub
  Partial Private Sub UpdateRecibos(instance As Recibos)
    End Sub
  Partial Private Sub DeleteRecibos(instance As Recibos)
    End Sub
  Partial Private Sub InsertRecibos_Pendientes(instance As Recibos_Pendientes)
    End Sub
  Partial Private Sub UpdateRecibos_Pendientes(instance As Recibos_Pendientes)
    End Sub
  Partial Private Sub DeleteRecibos_Pendientes(instance As Recibos_Pendientes)
    End Sub
  Partial Private Sub InsertTotal(instance As Total)
    End Sub
  Partial Private Sub UpdateTotal(instance As Total)
    End Sub
  Partial Private Sub DeleteTotal(instance As Total)
    End Sub
  Partial Private Sub InsertUsuarios(instance As Usuarios)
    End Sub
  Partial Private Sub UpdateUsuarios(instance As Usuarios)
    End Sub
  Partial Private Sub DeleteUsuarios(instance As Usuarios)
    End Sub
  Partial Private Sub InsertCotizaciones(instance As Cotizaciones)
    End Sub
  Partial Private Sub UpdateCotizaciones(instance As Cotizaciones)
    End Sub
  Partial Private Sub DeleteCotizaciones(instance As Cotizaciones)
    End Sub
  Partial Private Sub InsertCreditos_Recargas(instance As Creditos_Recargas)
    End Sub
  Partial Private Sub UpdateCreditos_Recargas(instance As Creditos_Recargas)
    End Sub
  Partial Private Sub DeleteCreditos_Recargas(instance As Creditos_Recargas)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CREATIVOS.My.MySettings.Default.CREATIVOSConnectionString2, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Baners() As System.Data.Linq.Table(Of Baners)
		Get
			Return Me.GetTable(Of Baners)
		End Get
	End Property
	
	Public ReadOnly Property Tickets() As System.Data.Linq.Table(Of Tickets)
		Get
			Return Me.GetTable(Of Tickets)
		End Get
	End Property
	
	Public ReadOnly Property Clientes() As System.Data.Linq.Table(Of Clientes)
		Get
			Return Me.GetTable(Of Clientes)
		End Get
	End Property
	
	Public ReadOnly Property Control_Recargas_Claro() As System.Data.Linq.Table(Of Control_Recargas_Claro)
		Get
			Return Me.GetTable(Of Control_Recargas_Claro)
		End Get
	End Property
	
	Public ReadOnly Property Control_Recargas_Tigo() As System.Data.Linq.Table(Of Control_Recargas_Tigo)
		Get
			Return Me.GetTable(Of Control_Recargas_Tigo)
		End Get
	End Property
	
	Public ReadOnly Property Deducciones() As System.Data.Linq.Table(Of Deducciones)
		Get
			Return Me.GetTable(Of Deducciones)
		End Get
	End Property
	
	Public ReadOnly Property Descripcion() As System.Data.Linq.Table(Of Descripcion)
		Get
			Return Me.GetTable(Of Descripcion)
		End Get
	End Property
	
	Public ReadOnly Property Detalle() As System.Data.Linq.Table(Of Detalle)
		Get
			Return Me.GetTable(Of Detalle)
		End Get
	End Property
	
	Public ReadOnly Property Empleados() As System.Data.Linq.Table(Of Empleados)
		Get
			Return Me.GetTable(Of Empleados)
		End Get
	End Property
	
	Public ReadOnly Property Inventario() As System.Data.Linq.Table(Of Inventario)
		Get
			Return Me.GetTable(Of Inventario)
		End Get
	End Property
	
	Public ReadOnly Property Login() As System.Data.Linq.Table(Of Login)
		Get
			Return Me.GetTable(Of Login)
		End Get
	End Property
	
	Public ReadOnly Property Prestamos() As System.Data.Linq.Table(Of Prestamos)
		Get
			Return Me.GetTable(Of Prestamos)
		End Get
	End Property
	
	Public ReadOnly Property Recibos() As System.Data.Linq.Table(Of Recibos)
		Get
			Return Me.GetTable(Of Recibos)
		End Get
	End Property
	
	Public ReadOnly Property Recibos_Pendientes() As System.Data.Linq.Table(Of Recibos_Pendientes)
		Get
			Return Me.GetTable(Of Recibos_Pendientes)
		End Get
	End Property
	
	Public ReadOnly Property Total() As System.Data.Linq.Table(Of Total)
		Get
			Return Me.GetTable(Of Total)
		End Get
	End Property
	
	Public ReadOnly Property Usuarios() As System.Data.Linq.Table(Of Usuarios)
		Get
			Return Me.GetTable(Of Usuarios)
		End Get
	End Property
	
	Public ReadOnly Property Cotizaciones() As System.Data.Linq.Table(Of Cotizaciones)
		Get
			Return Me.GetTable(Of Cotizaciones)
		End Get
	End Property
	
	Public ReadOnly Property Creditos_Recargas() As System.Data.Linq.Table(Of Creditos_Recargas)
		Get
			Return Me.GetTable(Of Creditos_Recargas)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Baners")>  _
Partial Public Class Baners
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Hora As String
	
	Private _Cantidad As System.Nullable(Of Decimal)
	
	Private _Cliente As String
	
	Private _Cantidad_Letras As String
	
	Private _Descripcion As String
	
	Private _Medidas As String
	
	Private _Imagen As System.Data.Linq.Binary
	
	Private _Usuario As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As String)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnCantidad_LetrasChanging(value As String)
    End Sub
    Partial Private Sub OnCantidad_LetrasChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnMedidasChanging(value As String)
    End Sub
    Partial Private Sub OnMedidasChanged()
    End Sub
    Partial Private Sub OnImagenChanging(value As System.Data.Linq.Binary)
    End Sub
    Partial Private Sub OnImagenChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="VarChar(100)")>  _
	Public Property Hora() As String
		Get
			Return Me._Hora
		End Get
		Set
			If (String.Equals(Me._Hora, value) = false) Then
				Me.OnHoraChanging(value)
				Me.SendPropertyChanging
				Me._Hora = value
				Me.SendPropertyChanged("Hora")
				Me.OnHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="SmallMoney")>  _
	Public Property Cantidad() As System.Nullable(Of Decimal)
		Get
			Return Me._Cantidad
		End Get
		Set
			If (Me._Cantidad.Equals(value) = false) Then
				Me.OnCantidadChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad = value
				Me.SendPropertyChanged("Cantidad")
				Me.OnCantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="VarChar(100)")>  _
	Public Property Cliente() As String
		Get
			Return Me._Cliente
		End Get
		Set
			If (String.Equals(Me._Cliente, value) = false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad_Letras", DbType:="VarChar(100)")>  _
	Public Property Cantidad_Letras() As String
		Get
			Return Me._Cantidad_Letras
		End Get
		Set
			If (String.Equals(Me._Cantidad_Letras, value) = false) Then
				Me.OnCantidad_LetrasChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad_Letras = value
				Me.SendPropertyChanged("Cantidad_Letras")
				Me.OnCantidad_LetrasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(100)")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Medidas", DbType:="VarChar(50)")>  _
	Public Property Medidas() As String
		Get
			Return Me._Medidas
		End Get
		Set
			If (String.Equals(Me._Medidas, value) = false) Then
				Me.OnMedidasChanging(value)
				Me.SendPropertyChanging
				Me._Medidas = value
				Me.SendPropertyChanged("Medidas")
				Me.OnMedidasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Imagen", DbType:="Image", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Imagen() As System.Data.Linq.Binary
		Get
			Return Me._Imagen
		End Get
		Set
			If (Object.Equals(Me._Imagen, value) = false) Then
				Me.OnImagenChanging(value)
				Me.SendPropertyChanging
				Me._Imagen = value
				Me.SendPropertyChanged("Imagen")
				Me.OnImagenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(100)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Tickets")>  _
Partial Public Class Tickets
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Ticket As Integer
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Nombre As String
	
	Private _Total As System.Nullable(Of Integer)
	
	Private _Mes As String
	
	Private _Hora As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnTicketChanging(value As Integer)
    End Sub
    Partial Private Sub OnTicketChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    Partial Private Sub OnMesChanging(value As String)
    End Sub
    Partial Private Sub OnMesChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ticket", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Ticket() As Integer
		Get
			Return Me._Ticket
		End Get
		Set
			If ((Me._Ticket = value)  _
						= false) Then
				Me.OnTicketChanging(value)
				Me.SendPropertyChanging
				Me._Ticket = value
				Me.SendPropertyChanged("Ticket")
				Me.OnTicketChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Int")>  _
	Public Property Total() As System.Nullable(Of Integer)
		Get
			Return Me._Total
		End Get
		Set
			If (Me._Total.Equals(value) = false) Then
				Me.OnTotalChanging(value)
				Me.SendPropertyChanging
				Me._Total = value
				Me.SendPropertyChanged("Total")
				Me.OnTotalChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mes", DbType:="VarChar(50)")>  _
	Public Property Mes() As String
		Get
			Return Me._Mes
		End Get
		Set
			If (String.Equals(Me._Mes, value) = false) Then
				Me.OnMesChanging(value)
				Me.SendPropertyChanging
				Me._Mes = value
				Me.SendPropertyChanged("Mes")
				Me.OnMesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="VarChar(50)")>  _
	Public Property Hora() As String
		Get
			Return Me._Hora
		End Get
		Set
			If (String.Equals(Me._Hora, value) = false) Then
				Me.OnHoraChanging(value)
				Me.SendPropertyChanging
				Me._Hora = value
				Me.SendPropertyChanged("Hora")
				Me.OnHoraChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Clientes")>  _
Partial Public Class Clientes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Nombre As String
	
	Private _Celular As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCelularChanging(value As String)
    End Sub
    Partial Private Sub OnCelularChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Celular", DbType:="VarChar(11)")>  _
	Public Property Celular() As String
		Get
			Return Me._Celular
		End Get
		Set
			If (String.Equals(Me._Celular, value) = false) Then
				Me.OnCelularChanging(value)
				Me.SendPropertyChanging
				Me._Celular = value
				Me.SendPropertyChanged("Celular")
				Me.OnCelularChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Control_Recargas_Claro")>  _
Partial Public Class Control_Recargas_Claro
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Nombre As String
	
	Private _Celular As String
	
	Private _Cantidad As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Hora As String
	
	Private _Compra As System.Nullable(Of Integer)
	
	Private _Saldo_Anterior As System.Nullable(Of Decimal)
	
	Private _Saldo_Actual As System.Nullable(Of Decimal)
	
	Private _Vendido As System.Nullable(Of Integer)
	
	Private _Efectivo As System.Nullable(Of Integer)
	
	Private _Creditos As System.Nullable(Of Integer)
	
	Private _Errores As System.Nullable(Of Integer)
	
	Private _Observacion As String
	
	Private _Usuario As String
	
	Private _Cierre As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCelularChanging(value As String)
    End Sub
    Partial Private Sub OnCelularChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnCompraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCompraChanged()
    End Sub
    Partial Private Sub OnSaldo_AnteriorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSaldo_AnteriorChanged()
    End Sub
    Partial Private Sub OnSaldo_ActualChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSaldo_ActualChanged()
    End Sub
    Partial Private Sub OnVendidoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVendidoChanged()
    End Sub
    Partial Private Sub OnEfectivoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEfectivoChanged()
    End Sub
    Partial Private Sub OnCreditosChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreditosChanged()
    End Sub
    Partial Private Sub OnErroresChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnErroresChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnCierreChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCierreChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Celular", DbType:="VarChar(11)")>  _
	Public Property Celular() As String
		Get
			Return Me._Celular
		End Get
		Set
			If (String.Equals(Me._Celular, value) = false) Then
				Me.OnCelularChanging(value)
				Me.SendPropertyChanging
				Me._Celular = value
				Me.SendPropertyChanged("Celular")
				Me.OnCelularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Int")>  _
	Public Property Cantidad() As System.Nullable(Of Integer)
		Get
			Return Me._Cantidad
		End Get
		Set
			If (Me._Cantidad.Equals(value) = false) Then
				Me.OnCantidadChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad = value
				Me.SendPropertyChanged("Cantidad")
				Me.OnCantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="VarChar(50)")>  _
	Public Property Hora() As String
		Get
			Return Me._Hora
		End Get
		Set
			If (String.Equals(Me._Hora, value) = false) Then
				Me.OnHoraChanging(value)
				Me.SendPropertyChanging
				Me._Hora = value
				Me.SendPropertyChanged("Hora")
				Me.OnHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Compra", DbType:="Int")>  _
	Public Property Compra() As System.Nullable(Of Integer)
		Get
			Return Me._Compra
		End Get
		Set
			If (Me._Compra.Equals(value) = false) Then
				Me.OnCompraChanging(value)
				Me.SendPropertyChanging
				Me._Compra = value
				Me.SendPropertyChanged("Compra")
				Me.OnCompraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saldo_Anterior", DbType:="Decimal(18,2)")>  _
	Public Property Saldo_Anterior() As System.Nullable(Of Decimal)
		Get
			Return Me._Saldo_Anterior
		End Get
		Set
			If (Me._Saldo_Anterior.Equals(value) = false) Then
				Me.OnSaldo_AnteriorChanging(value)
				Me.SendPropertyChanging
				Me._Saldo_Anterior = value
				Me.SendPropertyChanged("Saldo_Anterior")
				Me.OnSaldo_AnteriorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saldo_Actual", DbType:="Decimal(18,2)")>  _
	Public Property Saldo_Actual() As System.Nullable(Of Decimal)
		Get
			Return Me._Saldo_Actual
		End Get
		Set
			If (Me._Saldo_Actual.Equals(value) = false) Then
				Me.OnSaldo_ActualChanging(value)
				Me.SendPropertyChanging
				Me._Saldo_Actual = value
				Me.SendPropertyChanged("Saldo_Actual")
				Me.OnSaldo_ActualChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vendido", DbType:="Int")>  _
	Public Property Vendido() As System.Nullable(Of Integer)
		Get
			Return Me._Vendido
		End Get
		Set
			If (Me._Vendido.Equals(value) = false) Then
				Me.OnVendidoChanging(value)
				Me.SendPropertyChanging
				Me._Vendido = value
				Me.SendPropertyChanged("Vendido")
				Me.OnVendidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Efectivo", DbType:="Int")>  _
	Public Property Efectivo() As System.Nullable(Of Integer)
		Get
			Return Me._Efectivo
		End Get
		Set
			If (Me._Efectivo.Equals(value) = false) Then
				Me.OnEfectivoChanging(value)
				Me.SendPropertyChanging
				Me._Efectivo = value
				Me.SendPropertyChanged("Efectivo")
				Me.OnEfectivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Creditos", DbType:="Int")>  _
	Public Property Creditos() As System.Nullable(Of Integer)
		Get
			Return Me._Creditos
		End Get
		Set
			If (Me._Creditos.Equals(value) = false) Then
				Me.OnCreditosChanging(value)
				Me.SendPropertyChanging
				Me._Creditos = value
				Me.SendPropertyChanged("Creditos")
				Me.OnCreditosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Errores", DbType:="Int")>  _
	Public Property Errores() As System.Nullable(Of Integer)
		Get
			Return Me._Errores
		End Get
		Set
			If (Me._Errores.Equals(value) = false) Then
				Me.OnErroresChanging(value)
				Me.SendPropertyChanging
				Me._Errores = value
				Me.SendPropertyChanged("Errores")
				Me.OnErroresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="VarChar(100)")>  _
	Public Property Observacion() As String
		Get
			Return Me._Observacion
		End Get
		Set
			If (String.Equals(Me._Observacion, value) = false) Then
				Me.OnObservacionChanging(value)
				Me.SendPropertyChanging
				Me._Observacion = value
				Me.SendPropertyChanged("Observacion")
				Me.OnObservacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(50)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cierre", DbType:="Int")>  _
	Public Property Cierre() As System.Nullable(Of Integer)
		Get
			Return Me._Cierre
		End Get
		Set
			If (Me._Cierre.Equals(value) = false) Then
				Me.OnCierreChanging(value)
				Me.SendPropertyChanging
				Me._Cierre = value
				Me.SendPropertyChanged("Cierre")
				Me.OnCierreChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Control_Recargas_Tigo")>  _
Partial Public Class Control_Recargas_Tigo
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Nombre As String
	
	Private _Celular As String
	
	Private _Cantidad As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Hora As String
	
	Private _Compra As System.Nullable(Of Integer)
	
	Private _Saldo_Anterior As System.Nullable(Of Decimal)
	
	Private _Saldo_Actual As System.Nullable(Of Decimal)
	
	Private _Vendido As System.Nullable(Of Integer)
	
	Private _Efectivo As System.Nullable(Of Integer)
	
	Private _Creditos As System.Nullable(Of Integer)
	
	Private _Errores As System.Nullable(Of Integer)
	
	Private _Observacion As String
	
	Private _Usuario As String
	
	Private _Cierre As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCelularChanging(value As String)
    End Sub
    Partial Private Sub OnCelularChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnHoraChanging(value As String)
    End Sub
    Partial Private Sub OnHoraChanged()
    End Sub
    Partial Private Sub OnCompraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCompraChanged()
    End Sub
    Partial Private Sub OnSaldo_AnteriorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSaldo_AnteriorChanged()
    End Sub
    Partial Private Sub OnSaldo_ActualChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSaldo_ActualChanged()
    End Sub
    Partial Private Sub OnVendidoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnVendidoChanged()
    End Sub
    Partial Private Sub OnEfectivoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEfectivoChanged()
    End Sub
    Partial Private Sub OnCreditosChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCreditosChanged()
    End Sub
    Partial Private Sub OnErroresChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnErroresChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnCierreChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCierreChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Celular", DbType:="VarChar(11)")>  _
	Public Property Celular() As String
		Get
			Return Me._Celular
		End Get
		Set
			If (String.Equals(Me._Celular, value) = false) Then
				Me.OnCelularChanging(value)
				Me.SendPropertyChanging
				Me._Celular = value
				Me.SendPropertyChanged("Celular")
				Me.OnCelularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Int")>  _
	Public Property Cantidad() As System.Nullable(Of Integer)
		Get
			Return Me._Cantidad
		End Get
		Set
			If (Me._Cantidad.Equals(value) = false) Then
				Me.OnCantidadChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad = value
				Me.SendPropertyChanged("Cantidad")
				Me.OnCantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="VarChar(50)")>  _
	Public Property Hora() As String
		Get
			Return Me._Hora
		End Get
		Set
			If (String.Equals(Me._Hora, value) = false) Then
				Me.OnHoraChanging(value)
				Me.SendPropertyChanging
				Me._Hora = value
				Me.SendPropertyChanged("Hora")
				Me.OnHoraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Compra", DbType:="Int")>  _
	Public Property Compra() As System.Nullable(Of Integer)
		Get
			Return Me._Compra
		End Get
		Set
			If (Me._Compra.Equals(value) = false) Then
				Me.OnCompraChanging(value)
				Me.SendPropertyChanging
				Me._Compra = value
				Me.SendPropertyChanged("Compra")
				Me.OnCompraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saldo_Anterior", DbType:="Decimal(18,2)")>  _
	Public Property Saldo_Anterior() As System.Nullable(Of Decimal)
		Get
			Return Me._Saldo_Anterior
		End Get
		Set
			If (Me._Saldo_Anterior.Equals(value) = false) Then
				Me.OnSaldo_AnteriorChanging(value)
				Me.SendPropertyChanging
				Me._Saldo_Anterior = value
				Me.SendPropertyChanged("Saldo_Anterior")
				Me.OnSaldo_AnteriorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saldo_Actual", DbType:="Decimal(18,2)")>  _
	Public Property Saldo_Actual() As System.Nullable(Of Decimal)
		Get
			Return Me._Saldo_Actual
		End Get
		Set
			If (Me._Saldo_Actual.Equals(value) = false) Then
				Me.OnSaldo_ActualChanging(value)
				Me.SendPropertyChanging
				Me._Saldo_Actual = value
				Me.SendPropertyChanged("Saldo_Actual")
				Me.OnSaldo_ActualChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Vendido", DbType:="Int")>  _
	Public Property Vendido() As System.Nullable(Of Integer)
		Get
			Return Me._Vendido
		End Get
		Set
			If (Me._Vendido.Equals(value) = false) Then
				Me.OnVendidoChanging(value)
				Me.SendPropertyChanging
				Me._Vendido = value
				Me.SendPropertyChanged("Vendido")
				Me.OnVendidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Efectivo", DbType:="Int")>  _
	Public Property Efectivo() As System.Nullable(Of Integer)
		Get
			Return Me._Efectivo
		End Get
		Set
			If (Me._Efectivo.Equals(value) = false) Then
				Me.OnEfectivoChanging(value)
				Me.SendPropertyChanging
				Me._Efectivo = value
				Me.SendPropertyChanged("Efectivo")
				Me.OnEfectivoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Creditos", DbType:="Int")>  _
	Public Property Creditos() As System.Nullable(Of Integer)
		Get
			Return Me._Creditos
		End Get
		Set
			If (Me._Creditos.Equals(value) = false) Then
				Me.OnCreditosChanging(value)
				Me.SendPropertyChanging
				Me._Creditos = value
				Me.SendPropertyChanged("Creditos")
				Me.OnCreditosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Errores", DbType:="Int")>  _
	Public Property Errores() As System.Nullable(Of Integer)
		Get
			Return Me._Errores
		End Get
		Set
			If (Me._Errores.Equals(value) = false) Then
				Me.OnErroresChanging(value)
				Me.SendPropertyChanging
				Me._Errores = value
				Me.SendPropertyChanged("Errores")
				Me.OnErroresChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="VarChar(100)")>  _
	Public Property Observacion() As String
		Get
			Return Me._Observacion
		End Get
		Set
			If (String.Equals(Me._Observacion, value) = false) Then
				Me.OnObservacionChanging(value)
				Me.SendPropertyChanging
				Me._Observacion = value
				Me.SendPropertyChanged("Observacion")
				Me.OnObservacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(50)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cierre", DbType:="Int")>  _
	Public Property Cierre() As System.Nullable(Of Integer)
		Get
			Return Me._Cierre
		End Get
		Set
			If (Me._Cierre.Equals(value) = false) Then
				Me.OnCierreChanging(value)
				Me.SendPropertyChanging
				Me._Cierre = value
				Me.SendPropertyChanged("Cierre")
				Me.OnCierreChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Deducciones")>  _
Partial Public Class Deducciones
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Codigo As String
	
	Private _Descripcion As String
	
	Private _Precio As System.Nullable(Of Decimal)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnPrecioChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnPrecioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codigo() As String
		Get
			Return Me._Codigo
		End Get
		Set
			If (String.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(50)")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Precio", DbType:="Money")>  _
	Public Property Precio() As System.Nullable(Of Decimal)
		Get
			Return Me._Precio
		End Get
		Set
			If (Me._Precio.Equals(value) = false) Then
				Me.OnPrecioChanging(value)
				Me.SendPropertyChanging
				Me._Precio = value
				Me.SendPropertyChanged("Precio")
				Me.OnPrecioChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Descripcion")>  _
Partial Public Class Descripcion
	
	Private _Ticket As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Nombre As String
	
	Private _Total As System.Nullable(Of Integer)
	
	Private _Descripcion As String
	
	Private _Cantidad As System.Nullable(Of Integer)
	
	Private _Precio As System.Nullable(Of Integer)
	
	Private _Subtotal As System.Nullable(Of Integer)
	
	Private _Hora As String
	
	Private _Mes As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ticket", DbType:="Int")>  _
	Public Property Ticket() As System.Nullable(Of Integer)
		Get
			Return Me._Ticket
		End Get
		Set
			If (Me._Ticket.Equals(value) = false) Then
				Me._Ticket = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me._Fecha = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me._Nombre = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Int")>  _
	Public Property Total() As System.Nullable(Of Integer)
		Get
			Return Me._Total
		End Get
		Set
			If (Me._Total.Equals(value) = false) Then
				Me._Total = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(50)")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me._Descripcion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Int")>  _
	Public Property Cantidad() As System.Nullable(Of Integer)
		Get
			Return Me._Cantidad
		End Get
		Set
			If (Me._Cantidad.Equals(value) = false) Then
				Me._Cantidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Precio", DbType:="Int")>  _
	Public Property Precio() As System.Nullable(Of Integer)
		Get
			Return Me._Precio
		End Get
		Set
			If (Me._Precio.Equals(value) = false) Then
				Me._Precio = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subtotal", DbType:="Int")>  _
	Public Property Subtotal() As System.Nullable(Of Integer)
		Get
			Return Me._Subtotal
		End Get
		Set
			If (Me._Subtotal.Equals(value) = false) Then
				Me._Subtotal = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hora", DbType:="VarChar(50)")>  _
	Public Property Hora() As String
		Get
			Return Me._Hora
		End Get
		Set
			If (String.Equals(Me._Hora, value) = false) Then
				Me._Hora = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mes", DbType:="VarChar(50)")>  _
	Public Property Mes() As String
		Get
			Return Me._Mes
		End Get
		Set
			If (String.Equals(Me._Mes, value) = false) Then
				Me._Mes = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Detalle")>  _
Partial Public Class Detalle
	
	Private _Cotizacion As System.Nullable(Of Integer)
	
	Private _Descripcion As String
	
	Private _Precio As System.Nullable(Of Decimal)
	
	Private _Cantidad As System.Nullable(Of Integer)
	
	Private _Subtotal As System.Nullable(Of Decimal)
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cotizacion", DbType:="Int")>  _
	Public Property Cotizacion() As System.Nullable(Of Integer)
		Get
			Return Me._Cotizacion
		End Get
		Set
			If (Me._Cotizacion.Equals(value) = false) Then
				Me._Cotizacion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(50)")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me._Descripcion = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Precio", DbType:="Money")>  _
	Public Property Precio() As System.Nullable(Of Decimal)
		Get
			Return Me._Precio
		End Get
		Set
			If (Me._Precio.Equals(value) = false) Then
				Me._Precio = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Int")>  _
	Public Property Cantidad() As System.Nullable(Of Integer)
		Get
			Return Me._Cantidad
		End Get
		Set
			If (Me._Cantidad.Equals(value) = false) Then
				Me._Cantidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subtotal", DbType:="Money")>  _
	Public Property Subtotal() As System.Nullable(Of Decimal)
		Get
			Return Me._Subtotal
		End Get
		Set
			If (Me._Subtotal.Equals(value) = false) Then
				Me._Subtotal = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Empleados")>  _
Partial Public Class Empleados
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Codigo As String
	
	Private _Nombre As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codigo() As String
		Get
			Return Me._Codigo
		End Get
		Set
			If (String.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Inventario")>  _
Partial Public Class Inventario
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Codigo As String
	
	Private _Descripcion As String
	
	Private _Cantidad As System.Nullable(Of Integer)
	
	Private _Precio As System.Nullable(Of Integer)
	
	Private _Subtotal As System.Nullable(Of Integer)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnDescripcionChanging(value As String)
    End Sub
    Partial Private Sub OnDescripcionChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnPrecioChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPrecioChanged()
    End Sub
    Partial Private Sub OnSubtotalChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnSubtotalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codigo() As String
		Get
			Return Me._Codigo
		End Get
		Set
			If (String.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descripcion", DbType:="VarChar(50)")>  _
	Public Property Descripcion() As String
		Get
			Return Me._Descripcion
		End Get
		Set
			If (String.Equals(Me._Descripcion, value) = false) Then
				Me.OnDescripcionChanging(value)
				Me.SendPropertyChanging
				Me._Descripcion = value
				Me.SendPropertyChanged("Descripcion")
				Me.OnDescripcionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Int")>  _
	Public Property Cantidad() As System.Nullable(Of Integer)
		Get
			Return Me._Cantidad
		End Get
		Set
			If (Me._Cantidad.Equals(value) = false) Then
				Me.OnCantidadChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad = value
				Me.SendPropertyChanged("Cantidad")
				Me.OnCantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Precio", DbType:="Int")>  _
	Public Property Precio() As System.Nullable(Of Integer)
		Get
			Return Me._Precio
		End Get
		Set
			If (Me._Precio.Equals(value) = false) Then
				Me.OnPrecioChanging(value)
				Me.SendPropertyChanging
				Me._Precio = value
				Me.SendPropertyChanged("Precio")
				Me.OnPrecioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Subtotal", DbType:="Int")>  _
	Public Property Subtotal() As System.Nullable(Of Integer)
		Get
			Return Me._Subtotal
		End Get
		Set
			If (Me._Subtotal.Equals(value) = false) Then
				Me.OnSubtotalChanging(value)
				Me.SendPropertyChanging
				Me._Subtotal = value
				Me.SendPropertyChanged("Subtotal")
				Me.OnSubtotalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Login")>  _
Partial Public Class Login
	
	Private _Usuario As String
	
	Private _Contraseña As String
	
	Private _Cargo As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(50)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me._Usuario = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contraseña", DbType:="VarChar(50)")>  _
	Public Property Contraseña() As String
		Get
			Return Me._Contraseña
		End Get
		Set
			If (String.Equals(Me._Contraseña, value) = false) Then
				Me._Contraseña = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cargo", DbType:="VarChar(50)")>  _
	Public Property Cargo() As String
		Get
			Return Me._Cargo
		End Get
		Set
			If (String.Equals(Me._Cargo, value) = false) Then
				Me._Cargo = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Prestamos")>  _
Partial Public Class Prestamos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Codigo As System.Nullable(Of Integer)
	
	Private _Nombre As String
	
	Private _Prestamo As System.Nullable(Of Single)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnCodigoChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnPrestamoChanging(value As System.Nullable(Of Single))
    End Sub
    Partial Private Sub OnPrestamoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="Int")>  _
	Public Property Codigo() As System.Nullable(Of Integer)
		Get
			Return Me._Codigo
		End Get
		Set
			If (Me._Codigo.Equals(value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Prestamo", DbType:="Real")>  _
	Public Property Prestamo() As System.Nullable(Of Single)
		Get
			Return Me._Prestamo
		End Get
		Set
			If (Me._Prestamo.Equals(value) = false) Then
				Me.OnPrestamoChanging(value)
				Me.SendPropertyChanging
				Me._Prestamo = value
				Me.SendPropertyChanged("Prestamo")
				Me.OnPrestamoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Recibos")>  _
Partial Public Class Recibos
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Cantidad As System.Nullable(Of Decimal)
	
	Private _Cliente As String
	
	Private _Cantidad_Letras As String
	
	Private _Concepto As String
	
	Private _Saldo_Anterior As System.Nullable(Of Decimal)
	
	Private _Abono As System.Nullable(Of Decimal)
	
	Private _Saldo_Actual As System.Nullable(Of Decimal)
	
	Private _Estado As String
	
	Private _Usuario As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As String)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnCantidad_LetrasChanging(value As String)
    End Sub
    Partial Private Sub OnCantidad_LetrasChanged()
    End Sub
    Partial Private Sub OnConceptoChanging(value As String)
    End Sub
    Partial Private Sub OnConceptoChanged()
    End Sub
    Partial Private Sub OnSaldo_AnteriorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSaldo_AnteriorChanged()
    End Sub
    Partial Private Sub OnAbonoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAbonoChanged()
    End Sub
    Partial Private Sub OnSaldo_ActualChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSaldo_ActualChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="SmallMoney")>  _
	Public Property Cantidad() As System.Nullable(Of Decimal)
		Get
			Return Me._Cantidad
		End Get
		Set
			If (Me._Cantidad.Equals(value) = false) Then
				Me.OnCantidadChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad = value
				Me.SendPropertyChanged("Cantidad")
				Me.OnCantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="VarChar(100)")>  _
	Public Property Cliente() As String
		Get
			Return Me._Cliente
		End Get
		Set
			If (String.Equals(Me._Cliente, value) = false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad_Letras", DbType:="VarChar(100)")>  _
	Public Property Cantidad_Letras() As String
		Get
			Return Me._Cantidad_Letras
		End Get
		Set
			If (String.Equals(Me._Cantidad_Letras, value) = false) Then
				Me.OnCantidad_LetrasChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad_Letras = value
				Me.SendPropertyChanged("Cantidad_Letras")
				Me.OnCantidad_LetrasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Concepto", DbType:="VarChar(100)")>  _
	Public Property Concepto() As String
		Get
			Return Me._Concepto
		End Get
		Set
			If (String.Equals(Me._Concepto, value) = false) Then
				Me.OnConceptoChanging(value)
				Me.SendPropertyChanging
				Me._Concepto = value
				Me.SendPropertyChanged("Concepto")
				Me.OnConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saldo_Anterior", DbType:="Money")>  _
	Public Property Saldo_Anterior() As System.Nullable(Of Decimal)
		Get
			Return Me._Saldo_Anterior
		End Get
		Set
			If (Me._Saldo_Anterior.Equals(value) = false) Then
				Me.OnSaldo_AnteriorChanging(value)
				Me.SendPropertyChanging
				Me._Saldo_Anterior = value
				Me.SendPropertyChanged("Saldo_Anterior")
				Me.OnSaldo_AnteriorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abono", DbType:="Money")>  _
	Public Property Abono() As System.Nullable(Of Decimal)
		Get
			Return Me._Abono
		End Get
		Set
			If (Me._Abono.Equals(value) = false) Then
				Me.OnAbonoChanging(value)
				Me.SendPropertyChanging
				Me._Abono = value
				Me.SendPropertyChanged("Abono")
				Me.OnAbonoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saldo_Actual", DbType:="Money")>  _
	Public Property Saldo_Actual() As System.Nullable(Of Decimal)
		Get
			Return Me._Saldo_Actual
		End Get
		Set
			If (Me._Saldo_Actual.Equals(value) = false) Then
				Me.OnSaldo_ActualChanging(value)
				Me.SendPropertyChanging
				Me._Saldo_Actual = value
				Me.SendPropertyChanged("Saldo_Actual")
				Me.OnSaldo_ActualChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(50)")>  _
	Public Property Estado() As String
		Get
			Return Me._Estado
		End Get
		Set
			If (String.Equals(Me._Estado, value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(100)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Recibos_Pendientes")>  _
Partial Public Class Recibos_Pendientes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Cantidad As System.Nullable(Of Decimal)
	
	Private _Cliente As String
	
	Private _Cantidad_Letras As String
	
	Private _Concepto As String
	
	Private _Saldo_Anterior As System.Nullable(Of Decimal)
	
	Private _Abono As System.Nullable(Of Decimal)
	
	Private _Saldo_Actual As System.Nullable(Of Decimal)
	
	Private _Estado As String
	
	Private _Usuario As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnClienteChanging(value As String)
    End Sub
    Partial Private Sub OnClienteChanged()
    End Sub
    Partial Private Sub OnCantidad_LetrasChanging(value As String)
    End Sub
    Partial Private Sub OnCantidad_LetrasChanged()
    End Sub
    Partial Private Sub OnConceptoChanging(value As String)
    End Sub
    Partial Private Sub OnConceptoChanged()
    End Sub
    Partial Private Sub OnSaldo_AnteriorChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSaldo_AnteriorChanged()
    End Sub
    Partial Private Sub OnAbonoChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnAbonoChanged()
    End Sub
    Partial Private Sub OnSaldo_ActualChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnSaldo_ActualChanged()
    End Sub
    Partial Private Sub OnEstadoChanging(value As String)
    End Sub
    Partial Private Sub OnEstadoChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="SmallMoney")>  _
	Public Property Cantidad() As System.Nullable(Of Decimal)
		Get
			Return Me._Cantidad
		End Get
		Set
			If (Me._Cantidad.Equals(value) = false) Then
				Me.OnCantidadChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad = value
				Me.SendPropertyChanged("Cantidad")
				Me.OnCantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cliente", DbType:="VarChar(100)")>  _
	Public Property Cliente() As String
		Get
			Return Me._Cliente
		End Get
		Set
			If (String.Equals(Me._Cliente, value) = false) Then
				Me.OnClienteChanging(value)
				Me.SendPropertyChanging
				Me._Cliente = value
				Me.SendPropertyChanged("Cliente")
				Me.OnClienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad_Letras", DbType:="VarChar(100)")>  _
	Public Property Cantidad_Letras() As String
		Get
			Return Me._Cantidad_Letras
		End Get
		Set
			If (String.Equals(Me._Cantidad_Letras, value) = false) Then
				Me.OnCantidad_LetrasChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad_Letras = value
				Me.SendPropertyChanged("Cantidad_Letras")
				Me.OnCantidad_LetrasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Concepto", DbType:="VarChar(100)")>  _
	Public Property Concepto() As String
		Get
			Return Me._Concepto
		End Get
		Set
			If (String.Equals(Me._Concepto, value) = false) Then
				Me.OnConceptoChanging(value)
				Me.SendPropertyChanging
				Me._Concepto = value
				Me.SendPropertyChanged("Concepto")
				Me.OnConceptoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saldo_Anterior", DbType:="Money")>  _
	Public Property Saldo_Anterior() As System.Nullable(Of Decimal)
		Get
			Return Me._Saldo_Anterior
		End Get
		Set
			If (Me._Saldo_Anterior.Equals(value) = false) Then
				Me.OnSaldo_AnteriorChanging(value)
				Me.SendPropertyChanging
				Me._Saldo_Anterior = value
				Me.SendPropertyChanged("Saldo_Anterior")
				Me.OnSaldo_AnteriorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Abono", DbType:="Money")>  _
	Public Property Abono() As System.Nullable(Of Decimal)
		Get
			Return Me._Abono
		End Get
		Set
			If (Me._Abono.Equals(value) = false) Then
				Me.OnAbonoChanging(value)
				Me.SendPropertyChanging
				Me._Abono = value
				Me.SendPropertyChanged("Abono")
				Me.OnAbonoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Saldo_Actual", DbType:="Money")>  _
	Public Property Saldo_Actual() As System.Nullable(Of Decimal)
		Get
			Return Me._Saldo_Actual
		End Get
		Set
			If (Me._Saldo_Actual.Equals(value) = false) Then
				Me.OnSaldo_ActualChanging(value)
				Me.SendPropertyChanging
				Me._Saldo_Actual = value
				Me.SendPropertyChanged("Saldo_Actual")
				Me.OnSaldo_ActualChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Estado", DbType:="VarChar(50)")>  _
	Public Property Estado() As String
		Get
			Return Me._Estado
		End Get
		Set
			If (String.Equals(Me._Estado, value) = false) Then
				Me.OnEstadoChanging(value)
				Me.SendPropertyChanging
				Me._Estado = value
				Me.SendPropertyChanged("Estado")
				Me.OnEstadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(100)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Total")>  _
Partial Public Class Total
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Codigo As String
	
	Private _Total_Deduccion As System.Nullable(Of Decimal)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCodigoChanging(value As String)
    End Sub
    Partial Private Sub OnCodigoChanged()
    End Sub
    Partial Private Sub OnTotal_DeduccionChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotal_DeduccionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Codigo", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Codigo() As String
		Get
			Return Me._Codigo
		End Get
		Set
			If (String.Equals(Me._Codigo, value) = false) Then
				Me.OnCodigoChanging(value)
				Me.SendPropertyChanging
				Me._Codigo = value
				Me.SendPropertyChanged("Codigo")
				Me.OnCodigoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total_Deduccion", DbType:="Money")>  _
	Public Property Total_Deduccion() As System.Nullable(Of Decimal)
		Get
			Return Me._Total_Deduccion
		End Get
		Set
			If (Me._Total_Deduccion.Equals(value) = false) Then
				Me.OnTotal_DeduccionChanging(value)
				Me.SendPropertyChanging
				Me._Total_Deduccion = value
				Me.SendPropertyChanged("Total_Deduccion")
				Me.OnTotal_DeduccionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Usuarios")>  _
Partial Public Class Usuarios
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Usuario As String
	
	Private _Contraseña As String
	
	Private _Cargo As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnContraseñaChanging(value As String)
    End Sub
    Partial Private Sub OnContraseñaChanged()
    End Sub
    Partial Private Sub OnCargoChanging(value As String)
    End Sub
    Partial Private Sub OnCargoChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(50)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contraseña", DbType:="VarChar(50)")>  _
	Public Property Contraseña() As String
		Get
			Return Me._Contraseña
		End Get
		Set
			If (String.Equals(Me._Contraseña, value) = false) Then
				Me.OnContraseñaChanging(value)
				Me.SendPropertyChanging
				Me._Contraseña = value
				Me.SendPropertyChanged("Contraseña")
				Me.OnContraseñaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cargo", DbType:="VarChar(50)")>  _
	Public Property Cargo() As String
		Get
			Return Me._Cargo
		End Get
		Set
			If (String.Equals(Me._Cargo, value) = false) Then
				Me.OnCargoChanging(value)
				Me.SendPropertyChanging
				Me._Cargo = value
				Me.SendPropertyChanged("Cargo")
				Me.OnCargoChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Cotizaciones")>  _
Partial Public Class Cotizaciones
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Cotizacion As Integer
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Nombre As String
	
	Private _Total As System.Nullable(Of Decimal)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCotizacionChanging(value As Integer)
    End Sub
    Partial Private Sub OnCotizacionChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnTotalChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnTotalChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cotizacion", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Cotizacion() As Integer
		Get
			Return Me._Cotizacion
		End Get
		Set
			If ((Me._Cotizacion = value)  _
						= false) Then
				Me.OnCotizacionChanging(value)
				Me.SendPropertyChanging
				Me._Cotizacion = value
				Me.SendPropertyChanged("Cotizacion")
				Me.OnCotizacionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Total", DbType:="Money")>  _
	Public Property Total() As System.Nullable(Of Decimal)
		Get
			Return Me._Total
		End Get
		Set
			If (Me._Total.Equals(value) = false) Then
				Me.OnTotalChanging(value)
				Me.SendPropertyChanging
				Me._Total = value
				Me.SendPropertyChanged("Total")
				Me.OnTotalChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Creditos_Recargas")>  _
Partial Public Class Creditos_Recargas
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Nombre As String
	
	Private _Celular As String
	
	Private _Cantidad As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnNombreChanging(value As String)
    End Sub
    Partial Private Sub OnNombreChanged()
    End Sub
    Partial Private Sub OnCelularChanging(value As String)
    End Sub
    Partial Private Sub OnCelularChanged()
    End Sub
    Partial Private Sub OnCantidadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCantidadChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nombre", DbType:="VarChar(50)")>  _
	Public Property Nombre() As String
		Get
			Return Me._Nombre
		End Get
		Set
			If (String.Equals(Me._Nombre, value) = false) Then
				Me.OnNombreChanging(value)
				Me.SendPropertyChanging
				Me._Nombre = value
				Me.SendPropertyChanged("Nombre")
				Me.OnNombreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Celular", DbType:="VarChar(11)")>  _
	Public Property Celular() As String
		Get
			Return Me._Celular
		End Get
		Set
			If (String.Equals(Me._Celular, value) = false) Then
				Me.OnCelularChanging(value)
				Me.SendPropertyChanging
				Me._Celular = value
				Me.SendPropertyChanged("Celular")
				Me.OnCelularChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cantidad", DbType:="Int")>  _
	Public Property Cantidad() As System.Nullable(Of Integer)
		Get
			Return Me._Cantidad
		End Get
		Set
			If (Me._Cantidad.Equals(value) = false) Then
				Me.OnCantidadChanging(value)
				Me.SendPropertyChanging
				Me._Cantidad = value
				Me.SendPropertyChanged("Cantidad")
				Me.OnCantidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
