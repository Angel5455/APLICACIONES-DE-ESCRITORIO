<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="OK.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        5nhQKgAAAABJRU5ErkJggg==
</value>
  </data>
</root>