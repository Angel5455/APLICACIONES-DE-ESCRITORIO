'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="SystemLaboratorio")>  _
Partial Public Class DataClasses1DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertPacientes(instance As Pacientes)
    End Sub
  Partial Private Sub UpdatePacientes(instance As Pacientes)
    End Sub
  Partial Private Sub DeletePacientes(instance As Pacientes)
    End Sub
  Partial Private Sub InsertCitologia_Moco_Fecal(instance As Citologia_Moco_Fecal)
    End Sub
  Partial Private Sub UpdateCitologia_Moco_Fecal(instance As Citologia_Moco_Fecal)
    End Sub
  Partial Private Sub DeleteCitologia_Moco_Fecal(instance As Citologia_Moco_Fecal)
    End Sub
  Partial Private Sub InsertEmbarazo_Orina(instance As Embarazo_Orina)
    End Sub
  Partial Private Sub UpdateEmbarazo_Orina(instance As Embarazo_Orina)
    End Sub
  Partial Private Sub DeleteEmbarazo_Orina(instance As Embarazo_Orina)
    End Sub
  Partial Private Sub InsertEmbarazo_Sangre(instance As Embarazo_Sangre)
    End Sub
  Partial Private Sub UpdateEmbarazo_Sangre(instance As Embarazo_Sangre)
    End Sub
  Partial Private Sub DeleteEmbarazo_Sangre(instance As Embarazo_Sangre)
    End Sub
  Partial Private Sub InsertFSP(instance As FSP)
    End Sub
  Partial Private Sub UpdateFSP(instance As FSP)
    End Sub
  Partial Private Sub DeleteFSP(instance As FSP)
    End Sub
  Partial Private Sub InsertHeces(instance As Heces)
    End Sub
  Partial Private Sub UpdateHeces(instance As Heces)
    End Sub
  Partial Private Sub DeleteHeces(instance As Heces)
    End Sub
  Partial Private Sub InsertHPilory_Heces(instance As HPilory_Heces)
    End Sub
  Partial Private Sub UpdateHPilory_Heces(instance As HPilory_Heces)
    End Sub
  Partial Private Sub DeleteHPilory_Heces(instance As HPilory_Heces)
    End Sub
  Partial Private Sub InsertHPilory_Sangre(instance As HPilory_Sangre)
    End Sub
  Partial Private Sub UpdateHPilory_Sangre(instance As HPilory_Sangre)
    End Sub
  Partial Private Sub DeleteHPilory_Sangre(instance As HPilory_Sangre)
    End Sub
  Partial Private Sub InsertOrina(instance As Orina)
    End Sub
  Partial Private Sub UpdateOrina(instance As Orina)
    End Sub
  Partial Private Sub DeleteOrina(instance As Orina)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Sistema_Clinico.My.MySettings.Default.SystemLaboratorioConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Pacientes() As System.Data.Linq.Table(Of Pacientes)
		Get
			Return Me.GetTable(Of Pacientes)
		End Get
	End Property
	
	Public ReadOnly Property Citologia_Moco_Fecal() As System.Data.Linq.Table(Of Citologia_Moco_Fecal)
		Get
			Return Me.GetTable(Of Citologia_Moco_Fecal)
		End Get
	End Property
	
	Public ReadOnly Property Embarazo_Orina() As System.Data.Linq.Table(Of Embarazo_Orina)
		Get
			Return Me.GetTable(Of Embarazo_Orina)
		End Get
	End Property
	
	Public ReadOnly Property Embarazo_Sangre() As System.Data.Linq.Table(Of Embarazo_Sangre)
		Get
			Return Me.GetTable(Of Embarazo_Sangre)
		End Get
	End Property
	
	Public ReadOnly Property FSP() As System.Data.Linq.Table(Of FSP)
		Get
			Return Me.GetTable(Of FSP)
		End Get
	End Property
	
	Public ReadOnly Property Heces() As System.Data.Linq.Table(Of Heces)
		Get
			Return Me.GetTable(Of Heces)
		End Get
	End Property
	
	Public ReadOnly Property Hematologia() As System.Data.Linq.Table(Of Hematologia)
		Get
			Return Me.GetTable(Of Hematologia)
		End Get
	End Property
	
	Public ReadOnly Property HPilory_Heces() As System.Data.Linq.Table(Of HPilory_Heces)
		Get
			Return Me.GetTable(Of HPilory_Heces)
		End Get
	End Property
	
	Public ReadOnly Property HPilory_Sangre() As System.Data.Linq.Table(Of HPilory_Sangre)
		Get
			Return Me.GetTable(Of HPilory_Sangre)
		End Get
	End Property
	
	Public ReadOnly Property Quimica_Sanguinea() As System.Data.Linq.Table(Of Quimica_Sanguinea)
		Get
			Return Me.GetTable(Of Quimica_Sanguinea)
		End Get
	End Property
	
	Public ReadOnly Property PEspeciales() As System.Data.Linq.Table(Of PEspeciales)
		Get
			Return Me.GetTable(Of PEspeciales)
		End Get
	End Property
	
	Public ReadOnly Property CTOG() As System.Data.Linq.Table(Of CTOG)
		Get
			Return Me.GetTable(Of CTOG)
		End Get
	End Property
	
	Public ReadOnly Property Abuso_Drogas() As System.Data.Linq.Table(Of Abuso_Drogas)
		Get
			Return Me.GetTable(Of Abuso_Drogas)
		End Get
	End Property
	
	Public ReadOnly Property Orina() As System.Data.Linq.Table(Of Orina)
		Get
			Return Me.GetTable(Of Orina)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Pacientes")>  _
Partial Public Class Pacientes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Sexo As String
	
	Private _Fecha_Nacimiento As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Email As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdentidadChanging(value As String)
    End Sub
    Partial Private Sub OnIdentidadChanged()
    End Sub
    Partial Private Sub OnPacienteChanging(value As String)
    End Sub
    Partial Private Sub OnPacienteChanged()
    End Sub
    Partial Private Sub OnSexoChanging(value As String)
    End Sub
    Partial Private Sub OnSexoChanged()
    End Sub
    Partial Private Sub OnFecha_NacimientoChanging(value As String)
    End Sub
    Partial Private Sub OnFecha_NacimientoChanged()
    End Sub
    Partial Private Sub OnEdadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEdadChanged()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(20) NOT NULL", CanBeNull:=false)>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me.OnIdentidadChanging(value)
				Me.SendPropertyChanging
				Me._Identidad = value
				Me.SendPropertyChanged("Identidad")
				Me.OnIdentidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me.OnPacienteChanging(value)
				Me.SendPropertyChanging
				Me._Paciente = value
				Me.SendPropertyChanged("Paciente")
				Me.OnPacienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me.OnSexoChanging(value)
				Me.SendPropertyChanging
				Me._Sexo = value
				Me.SendPropertyChanged("Sexo")
				Me.OnSexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Nacimiento", DbType:="VarChar(50)")>  _
	Public Property Fecha_Nacimiento() As String
		Get
			Return Me._Fecha_Nacimiento
		End Get
		Set
			If (String.Equals(Me._Fecha_Nacimiento, value) = false) Then
				Me.OnFecha_NacimientoChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Nacimiento = value
				Me.SendPropertyChanged("Fecha_Nacimiento")
				Me.OnFecha_NacimientoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me.OnEdadChanging(value)
				Me.SendPropertyChanging
				Me._Edad = value
				Me.SendPropertyChanged("Edad")
				Me.OnEdadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="VarChar(50)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Citologia_Moco_Fecal")>  _
Partial Public Class Citologia_Moco_Fecal
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referido As String
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Aspecto As String
	
	Private _Consistencia As String
	
	Private _Color As String
	
	Private _Moco As String
	
	Private _Sangre As String
	
	Private _PH As String
	
	Private _Fehling As String
	
	Private _Guayaco As String
	
	Private _PMN As String
	
	Private _MN As String
	
	Private _Observacion As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdentidadChanging(value As String)
    End Sub
    Partial Private Sub OnIdentidadChanged()
    End Sub
    Partial Private Sub OnPacienteChanging(value As String)
    End Sub
    Partial Private Sub OnPacienteChanged()
    End Sub
    Partial Private Sub OnEdadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEdadChanged()
    End Sub
    Partial Private Sub OnSexoChanging(value As String)
    End Sub
    Partial Private Sub OnSexoChanged()
    End Sub
    Partial Private Sub OnReferidoChanging(value As String)
    End Sub
    Partial Private Sub OnReferidoChanged()
    End Sub
    Partial Private Sub OnN_MuestraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnN_MuestraChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnAspectoChanging(value As String)
    End Sub
    Partial Private Sub OnAspectoChanged()
    End Sub
    Partial Private Sub OnConsistenciaChanging(value As String)
    End Sub
    Partial Private Sub OnConsistenciaChanged()
    End Sub
    Partial Private Sub OnColorChanging(value As String)
    End Sub
    Partial Private Sub OnColorChanged()
    End Sub
    Partial Private Sub OnMocoChanging(value As String)
    End Sub
    Partial Private Sub OnMocoChanged()
    End Sub
    Partial Private Sub OnSangreChanging(value As String)
    End Sub
    Partial Private Sub OnSangreChanged()
    End Sub
    Partial Private Sub OnPHChanging(value As String)
    End Sub
    Partial Private Sub OnPHChanged()
    End Sub
    Partial Private Sub OnFehlingChanging(value As String)
    End Sub
    Partial Private Sub OnFehlingChanged()
    End Sub
    Partial Private Sub OnGuayacoChanging(value As String)
    End Sub
    Partial Private Sub OnGuayacoChanged()
    End Sub
    Partial Private Sub OnPMNChanging(value As String)
    End Sub
    Partial Private Sub OnPMNChanged()
    End Sub
    Partial Private Sub OnMNChanging(value As String)
    End Sub
    Partial Private Sub OnMNChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me.OnIdentidadChanging(value)
				Me.SendPropertyChanging
				Me._Identidad = value
				Me.SendPropertyChanged("Identidad")
				Me.OnIdentidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me.OnPacienteChanging(value)
				Me.SendPropertyChanging
				Me._Paciente = value
				Me.SendPropertyChanged("Paciente")
				Me.OnPacienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me.OnEdadChanging(value)
				Me.SendPropertyChanging
				Me._Edad = value
				Me.SendPropertyChanged("Edad")
				Me.OnEdadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me.OnSexoChanging(value)
				Me.SendPropertyChanging
				Me._Sexo = value
				Me.SendPropertyChanged("Sexo")
				Me.OnSexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referido", DbType:="VarChar(50)")>  _
	Public Property Referido() As String
		Get
			Return Me._Referido
		End Get
		Set
			If (String.Equals(Me._Referido, value) = false) Then
				Me.OnReferidoChanging(value)
				Me.SendPropertyChanging
				Me._Referido = value
				Me.SendPropertyChanged("Referido")
				Me.OnReferidoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me.OnN_MuestraChanging(value)
				Me.SendPropertyChanging
				Me._N_Muestra = value
				Me.SendPropertyChanged("N_Muestra")
				Me.OnN_MuestraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aspecto", DbType:="VarChar(50)")>  _
	Public Property Aspecto() As String
		Get
			Return Me._Aspecto
		End Get
		Set
			If (String.Equals(Me._Aspecto, value) = false) Then
				Me.OnAspectoChanging(value)
				Me.SendPropertyChanging
				Me._Aspecto = value
				Me.SendPropertyChanged("Aspecto")
				Me.OnAspectoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Consistencia", DbType:="VarChar(50)")>  _
	Public Property Consistencia() As String
		Get
			Return Me._Consistencia
		End Get
		Set
			If (String.Equals(Me._Consistencia, value) = false) Then
				Me.OnConsistenciaChanging(value)
				Me.SendPropertyChanging
				Me._Consistencia = value
				Me.SendPropertyChanged("Consistencia")
				Me.OnConsistenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Color", DbType:="VarChar(50)")>  _
	Public Property Color() As String
		Get
			Return Me._Color
		End Get
		Set
			If (String.Equals(Me._Color, value) = false) Then
				Me.OnColorChanging(value)
				Me.SendPropertyChanging
				Me._Color = value
				Me.SendPropertyChanged("Color")
				Me.OnColorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moco", DbType:="VarChar(50)")>  _
	Public Property Moco() As String
		Get
			Return Me._Moco
		End Get
		Set
			If (String.Equals(Me._Moco, value) = false) Then
				Me.OnMocoChanging(value)
				Me.SendPropertyChanging
				Me._Moco = value
				Me.SendPropertyChanged("Moco")
				Me.OnMocoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sangre", DbType:="VarChar(50)")>  _
	Public Property Sangre() As String
		Get
			Return Me._Sangre
		End Get
		Set
			If (String.Equals(Me._Sangre, value) = false) Then
				Me.OnSangreChanging(value)
				Me.SendPropertyChanging
				Me._Sangre = value
				Me.SendPropertyChanged("Sangre")
				Me.OnSangreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PH", DbType:="VarChar(50)")>  _
	Public Property PH() As String
		Get
			Return Me._PH
		End Get
		Set
			If (String.Equals(Me._PH, value) = false) Then
				Me.OnPHChanging(value)
				Me.SendPropertyChanging
				Me._PH = value
				Me.SendPropertyChanged("PH")
				Me.OnPHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fehling", DbType:="VarChar(50)")>  _
	Public Property Fehling() As String
		Get
			Return Me._Fehling
		End Get
		Set
			If (String.Equals(Me._Fehling, value) = false) Then
				Me.OnFehlingChanging(value)
				Me.SendPropertyChanging
				Me._Fehling = value
				Me.SendPropertyChanged("Fehling")
				Me.OnFehlingChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Guayaco", DbType:="VarChar(50)")>  _
	Public Property Guayaco() As String
		Get
			Return Me._Guayaco
		End Get
		Set
			If (String.Equals(Me._Guayaco, value) = false) Then
				Me.OnGuayacoChanging(value)
				Me.SendPropertyChanging
				Me._Guayaco = value
				Me.SendPropertyChanged("Guayaco")
				Me.OnGuayacoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PMN", DbType:="VarChar(50)")>  _
	Public Property PMN() As String
		Get
			Return Me._PMN
		End Get
		Set
			If (String.Equals(Me._PMN, value) = false) Then
				Me.OnPMNChanging(value)
				Me.SendPropertyChanging
				Me._PMN = value
				Me.SendPropertyChanged("PMN")
				Me.OnPMNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MN", DbType:="VarChar(50)")>  _
	Public Property MN() As String
		Get
			Return Me._MN
		End Get
		Set
			If (String.Equals(Me._MN, value) = false) Then
				Me.OnMNChanging(value)
				Me.SendPropertyChanging
				Me._MN = value
				Me.SendPropertyChanged("MN")
				Me.OnMNChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="VarChar(MAX)")>  _
	Public Property Observacion() As String
		Get
			Return Me._Observacion
		End Get
		Set
			If (String.Equals(Me._Observacion, value) = false) Then
				Me.OnObservacionChanging(value)
				Me.SendPropertyChanging
				Me._Observacion = value
				Me.SendPropertyChanged("Observacion")
				Me.OnObservacionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Embarazo_Orina")>  _
Partial Public Class Embarazo_Orina
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Resultado As String
	
	Private _Nota As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdentidadChanging(value As String)
    End Sub
    Partial Private Sub OnIdentidadChanged()
    End Sub
    Partial Private Sub OnPacienteChanging(value As String)
    End Sub
    Partial Private Sub OnPacienteChanged()
    End Sub
    Partial Private Sub OnEdadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEdadChanged()
    End Sub
    Partial Private Sub OnSexoChanging(value As String)
    End Sub
    Partial Private Sub OnSexoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnN_MuestraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnN_MuestraChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnResultadoChanging(value As String)
    End Sub
    Partial Private Sub OnResultadoChanged()
    End Sub
    Partial Private Sub OnNotaChanging(value As String)
    End Sub
    Partial Private Sub OnNotaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me.OnIdentidadChanging(value)
				Me.SendPropertyChanging
				Me._Identidad = value
				Me.SendPropertyChanged("Identidad")
				Me.OnIdentidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me.OnPacienteChanging(value)
				Me.SendPropertyChanging
				Me._Paciente = value
				Me.SendPropertyChanged("Paciente")
				Me.OnPacienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me.OnEdadChanging(value)
				Me.SendPropertyChanging
				Me._Edad = value
				Me.SendPropertyChanged("Edad")
				Me.OnEdadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me.OnSexoChanging(value)
				Me.SendPropertyChanging
				Me._Sexo = value
				Me.SendPropertyChanged("Sexo")
				Me.OnSexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me.OnReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._Referencia = value
				Me.SendPropertyChanged("Referencia")
				Me.OnReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me.OnN_MuestraChanging(value)
				Me.SendPropertyChanging
				Me._N_Muestra = value
				Me.SendPropertyChanged("N_Muestra")
				Me.OnN_MuestraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resultado", DbType:="VarChar(50)")>  _
	Public Property Resultado() As String
		Get
			Return Me._Resultado
		End Get
		Set
			If (String.Equals(Me._Resultado, value) = false) Then
				Me.OnResultadoChanging(value)
				Me.SendPropertyChanging
				Me._Resultado = value
				Me.SendPropertyChanged("Resultado")
				Me.OnResultadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nota", DbType:="VarChar(50)")>  _
	Public Property Nota() As String
		Get
			Return Me._Nota
		End Get
		Set
			If (String.Equals(Me._Nota, value) = false) Then
				Me.OnNotaChanging(value)
				Me.SendPropertyChanging
				Me._Nota = value
				Me.SendPropertyChanged("Nota")
				Me.OnNotaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Embarazo_Sangre")>  _
Partial Public Class Embarazo_Sangre
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Resultado As String
	
	Private _Nota As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdentidadChanging(value As String)
    End Sub
    Partial Private Sub OnIdentidadChanged()
    End Sub
    Partial Private Sub OnPacienteChanging(value As String)
    End Sub
    Partial Private Sub OnPacienteChanged()
    End Sub
    Partial Private Sub OnEdadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEdadChanged()
    End Sub
    Partial Private Sub OnSexoChanging(value As String)
    End Sub
    Partial Private Sub OnSexoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnN_MuestraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnN_MuestraChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnResultadoChanging(value As String)
    End Sub
    Partial Private Sub OnResultadoChanged()
    End Sub
    Partial Private Sub OnNotaChanging(value As String)
    End Sub
    Partial Private Sub OnNotaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me.OnIdentidadChanging(value)
				Me.SendPropertyChanging
				Me._Identidad = value
				Me.SendPropertyChanged("Identidad")
				Me.OnIdentidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me.OnPacienteChanging(value)
				Me.SendPropertyChanging
				Me._Paciente = value
				Me.SendPropertyChanged("Paciente")
				Me.OnPacienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me.OnEdadChanging(value)
				Me.SendPropertyChanging
				Me._Edad = value
				Me.SendPropertyChanged("Edad")
				Me.OnEdadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me.OnSexoChanging(value)
				Me.SendPropertyChanging
				Me._Sexo = value
				Me.SendPropertyChanged("Sexo")
				Me.OnSexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me.OnReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._Referencia = value
				Me.SendPropertyChanged("Referencia")
				Me.OnReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me.OnN_MuestraChanging(value)
				Me.SendPropertyChanging
				Me._N_Muestra = value
				Me.SendPropertyChanged("N_Muestra")
				Me.OnN_MuestraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resultado", DbType:="VarChar(50)")>  _
	Public Property Resultado() As String
		Get
			Return Me._Resultado
		End Get
		Set
			If (String.Equals(Me._Resultado, value) = false) Then
				Me.OnResultadoChanging(value)
				Me.SendPropertyChanging
				Me._Resultado = value
				Me.SendPropertyChanged("Resultado")
				Me.OnResultadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nota", DbType:="VarChar(MAX)")>  _
	Public Property Nota() As String
		Get
			Return Me._Nota
		End Get
		Set
			If (String.Equals(Me._Nota, value) = false) Then
				Me.OnNotaChanging(value)
				Me.SendPropertyChanging
				Me._Nota = value
				Me.SendPropertyChanged("Nota")
				Me.OnNotaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FSP")>  _
Partial Public Class FSP
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Serie_Roja As String
	
	Private _Serie_Blanca As String
	
	Private _Neutrofilos As String
	
	Private _Eosinofilos As String
	
	Private _Basofilos As String
	
	Private _Monocitos As String
	
	Private _Linfocitos As String
	
	Private _Serie_Plaquetaria As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdentidadChanging(value As String)
    End Sub
    Partial Private Sub OnIdentidadChanged()
    End Sub
    Partial Private Sub OnPacienteChanging(value As String)
    End Sub
    Partial Private Sub OnPacienteChanged()
    End Sub
    Partial Private Sub OnEdadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEdadChanged()
    End Sub
    Partial Private Sub OnSexoChanging(value As String)
    End Sub
    Partial Private Sub OnSexoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnN_MuestraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnN_MuestraChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnSerie_RojaChanging(value As String)
    End Sub
    Partial Private Sub OnSerie_RojaChanged()
    End Sub
    Partial Private Sub OnSerie_BlancaChanging(value As String)
    End Sub
    Partial Private Sub OnSerie_BlancaChanged()
    End Sub
    Partial Private Sub OnNeutrofilosChanging(value As String)
    End Sub
    Partial Private Sub OnNeutrofilosChanged()
    End Sub
    Partial Private Sub OnEosinofilosChanging(value As String)
    End Sub
    Partial Private Sub OnEosinofilosChanged()
    End Sub
    Partial Private Sub OnBasofilosChanging(value As String)
    End Sub
    Partial Private Sub OnBasofilosChanged()
    End Sub
    Partial Private Sub OnMonocitosChanging(value As String)
    End Sub
    Partial Private Sub OnMonocitosChanged()
    End Sub
    Partial Private Sub OnLinfocitosChanging(value As String)
    End Sub
    Partial Private Sub OnLinfocitosChanged()
    End Sub
    Partial Private Sub OnSerie_PlaquetariaChanging(value As String)
    End Sub
    Partial Private Sub OnSerie_PlaquetariaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me.OnIdentidadChanging(value)
				Me.SendPropertyChanging
				Me._Identidad = value
				Me.SendPropertyChanged("Identidad")
				Me.OnIdentidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me.OnPacienteChanging(value)
				Me.SendPropertyChanging
				Me._Paciente = value
				Me.SendPropertyChanged("Paciente")
				Me.OnPacienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me.OnEdadChanging(value)
				Me.SendPropertyChanging
				Me._Edad = value
				Me.SendPropertyChanged("Edad")
				Me.OnEdadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me.OnSexoChanging(value)
				Me.SendPropertyChanging
				Me._Sexo = value
				Me.SendPropertyChanged("Sexo")
				Me.OnSexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me.OnReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._Referencia = value
				Me.SendPropertyChanged("Referencia")
				Me.OnReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me.OnN_MuestraChanging(value)
				Me.SendPropertyChanging
				Me._N_Muestra = value
				Me.SendPropertyChanged("N_Muestra")
				Me.OnN_MuestraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie_Roja", DbType:="VarChar(MAX)")>  _
	Public Property Serie_Roja() As String
		Get
			Return Me._Serie_Roja
		End Get
		Set
			If (String.Equals(Me._Serie_Roja, value) = false) Then
				Me.OnSerie_RojaChanging(value)
				Me.SendPropertyChanging
				Me._Serie_Roja = value
				Me.SendPropertyChanged("Serie_Roja")
				Me.OnSerie_RojaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie_Blanca", DbType:="VarChar(MAX)")>  _
	Public Property Serie_Blanca() As String
		Get
			Return Me._Serie_Blanca
		End Get
		Set
			If (String.Equals(Me._Serie_Blanca, value) = false) Then
				Me.OnSerie_BlancaChanging(value)
				Me.SendPropertyChanging
				Me._Serie_Blanca = value
				Me.SendPropertyChanged("Serie_Blanca")
				Me.OnSerie_BlancaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Neutrofilos", DbType:="VarChar(50)")>  _
	Public Property Neutrofilos() As String
		Get
			Return Me._Neutrofilos
		End Get
		Set
			If (String.Equals(Me._Neutrofilos, value) = false) Then
				Me.OnNeutrofilosChanging(value)
				Me.SendPropertyChanging
				Me._Neutrofilos = value
				Me.SendPropertyChanged("Neutrofilos")
				Me.OnNeutrofilosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Eosinofilos", DbType:="VarChar(50)")>  _
	Public Property Eosinofilos() As String
		Get
			Return Me._Eosinofilos
		End Get
		Set
			If (String.Equals(Me._Eosinofilos, value) = false) Then
				Me.OnEosinofilosChanging(value)
				Me.SendPropertyChanging
				Me._Eosinofilos = value
				Me.SendPropertyChanged("Eosinofilos")
				Me.OnEosinofilosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Basofilos", DbType:="VarChar(50)")>  _
	Public Property Basofilos() As String
		Get
			Return Me._Basofilos
		End Get
		Set
			If (String.Equals(Me._Basofilos, value) = false) Then
				Me.OnBasofilosChanging(value)
				Me.SendPropertyChanging
				Me._Basofilos = value
				Me.SendPropertyChanged("Basofilos")
				Me.OnBasofilosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Monocitos", DbType:="VarChar(50)")>  _
	Public Property Monocitos() As String
		Get
			Return Me._Monocitos
		End Get
		Set
			If (String.Equals(Me._Monocitos, value) = false) Then
				Me.OnMonocitosChanging(value)
				Me.SendPropertyChanging
				Me._Monocitos = value
				Me.SendPropertyChanged("Monocitos")
				Me.OnMonocitosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Linfocitos", DbType:="VarChar(50)")>  _
	Public Property Linfocitos() As String
		Get
			Return Me._Linfocitos
		End Get
		Set
			If (String.Equals(Me._Linfocitos, value) = false) Then
				Me.OnLinfocitosChanging(value)
				Me.SendPropertyChanging
				Me._Linfocitos = value
				Me.SendPropertyChanged("Linfocitos")
				Me.OnLinfocitosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Serie_Plaquetaria", DbType:="VarChar(MAX)")>  _
	Public Property Serie_Plaquetaria() As String
		Get
			Return Me._Serie_Plaquetaria
		End Get
		Set
			If (String.Equals(Me._Serie_Plaquetaria, value) = false) Then
				Me.OnSerie_PlaquetariaChanging(value)
				Me.SendPropertyChanging
				Me._Serie_Plaquetaria = value
				Me.SendPropertyChanged("Serie_Plaquetaria")
				Me.OnSerie_PlaquetariaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Heces")>  _
Partial Public Class Heces
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Aspecto As String
	
	Private _Consistencia As String
	
	Private _Color As String
	
	Private _Moco As String
	
	Private _Sangre As String
	
	Private _Observacion As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdentidadChanging(value As String)
    End Sub
    Partial Private Sub OnIdentidadChanged()
    End Sub
    Partial Private Sub OnPacienteChanging(value As String)
    End Sub
    Partial Private Sub OnPacienteChanged()
    End Sub
    Partial Private Sub OnEdadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEdadChanged()
    End Sub
    Partial Private Sub OnSexoChanging(value As String)
    End Sub
    Partial Private Sub OnSexoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnN_MuestraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnN_MuestraChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnAspectoChanging(value As String)
    End Sub
    Partial Private Sub OnAspectoChanged()
    End Sub
    Partial Private Sub OnConsistenciaChanging(value As String)
    End Sub
    Partial Private Sub OnConsistenciaChanged()
    End Sub
    Partial Private Sub OnColorChanging(value As String)
    End Sub
    Partial Private Sub OnColorChanged()
    End Sub
    Partial Private Sub OnMocoChanging(value As String)
    End Sub
    Partial Private Sub OnMocoChanged()
    End Sub
    Partial Private Sub OnSangreChanging(value As String)
    End Sub
    Partial Private Sub OnSangreChanged()
    End Sub
    Partial Private Sub OnObservacionChanging(value As String)
    End Sub
    Partial Private Sub OnObservacionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me.OnIdentidadChanging(value)
				Me.SendPropertyChanging
				Me._Identidad = value
				Me.SendPropertyChanged("Identidad")
				Me.OnIdentidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me.OnPacienteChanging(value)
				Me.SendPropertyChanging
				Me._Paciente = value
				Me.SendPropertyChanged("Paciente")
				Me.OnPacienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me.OnEdadChanging(value)
				Me.SendPropertyChanging
				Me._Edad = value
				Me.SendPropertyChanged("Edad")
				Me.OnEdadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me.OnSexoChanging(value)
				Me.SendPropertyChanging
				Me._Sexo = value
				Me.SendPropertyChanged("Sexo")
				Me.OnSexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me.OnReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._Referencia = value
				Me.SendPropertyChanged("Referencia")
				Me.OnReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me.OnN_MuestraChanging(value)
				Me.SendPropertyChanging
				Me._N_Muestra = value
				Me.SendPropertyChanged("N_Muestra")
				Me.OnN_MuestraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aspecto", DbType:="VarChar(50)")>  _
	Public Property Aspecto() As String
		Get
			Return Me._Aspecto
		End Get
		Set
			If (String.Equals(Me._Aspecto, value) = false) Then
				Me.OnAspectoChanging(value)
				Me.SendPropertyChanging
				Me._Aspecto = value
				Me.SendPropertyChanged("Aspecto")
				Me.OnAspectoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Consistencia", DbType:="VarChar(50)")>  _
	Public Property Consistencia() As String
		Get
			Return Me._Consistencia
		End Get
		Set
			If (String.Equals(Me._Consistencia, value) = false) Then
				Me.OnConsistenciaChanging(value)
				Me.SendPropertyChanging
				Me._Consistencia = value
				Me.SendPropertyChanged("Consistencia")
				Me.OnConsistenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Color", DbType:="VarChar(50)")>  _
	Public Property Color() As String
		Get
			Return Me._Color
		End Get
		Set
			If (String.Equals(Me._Color, value) = false) Then
				Me.OnColorChanging(value)
				Me.SendPropertyChanging
				Me._Color = value
				Me.SendPropertyChanged("Color")
				Me.OnColorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Moco", DbType:="VarChar(50)")>  _
	Public Property Moco() As String
		Get
			Return Me._Moco
		End Get
		Set
			If (String.Equals(Me._Moco, value) = false) Then
				Me.OnMocoChanging(value)
				Me.SendPropertyChanging
				Me._Moco = value
				Me.SendPropertyChanged("Moco")
				Me.OnMocoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sangre", DbType:="VarChar(50)")>  _
	Public Property Sangre() As String
		Get
			Return Me._Sangre
		End Get
		Set
			If (String.Equals(Me._Sangre, value) = false) Then
				Me.OnSangreChanging(value)
				Me.SendPropertyChanging
				Me._Sangre = value
				Me.SendPropertyChanged("Sangre")
				Me.OnSangreChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="VarChar(MAX)")>  _
	Public Property Observacion() As String
		Get
			Return Me._Observacion
		End Get
		Set
			If (String.Equals(Me._Observacion, value) = false) Then
				Me.OnObservacionChanging(value)
				Me.SendPropertyChanging
				Me._Observacion = value
				Me.SendPropertyChanged("Observacion")
				Me.OnObservacionChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Hematologia")>  _
Partial Public Class Hematologia
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Examen As String
	
	Private _Resultado As String
	
	Private _Valor_Referencia As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me._N_Muestra = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me._Identidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me._Paciente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me._Edad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me._Sexo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me._Referencia = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me._Fecha = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Examen", DbType:="VarChar(50)")>  _
	Public Property Examen() As String
		Get
			Return Me._Examen
		End Get
		Set
			If (String.Equals(Me._Examen, value) = false) Then
				Me._Examen = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resultado", DbType:="VarChar(50)")>  _
	Public Property Resultado() As String
		Get
			Return Me._Resultado
		End Get
		Set
			If (String.Equals(Me._Resultado, value) = false) Then
				Me._Resultado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor_Referencia", DbType:="VarChar(50)")>  _
	Public Property Valor_Referencia() As String
		Get
			Return Me._Valor_Referencia
		End Get
		Set
			If (String.Equals(Me._Valor_Referencia, value) = false) Then
				Me._Valor_Referencia = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HPilory_Heces")>  _
Partial Public Class HPilory_Heces
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Resultado As String
	
	Private _Nota As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdentidadChanging(value As String)
    End Sub
    Partial Private Sub OnIdentidadChanged()
    End Sub
    Partial Private Sub OnPacienteChanging(value As String)
    End Sub
    Partial Private Sub OnPacienteChanged()
    End Sub
    Partial Private Sub OnEdadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEdadChanged()
    End Sub
    Partial Private Sub OnSexoChanging(value As String)
    End Sub
    Partial Private Sub OnSexoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnN_MuestraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnN_MuestraChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnResultadoChanging(value As String)
    End Sub
    Partial Private Sub OnResultadoChanged()
    End Sub
    Partial Private Sub OnNotaChanging(value As String)
    End Sub
    Partial Private Sub OnNotaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me.OnIdentidadChanging(value)
				Me.SendPropertyChanging
				Me._Identidad = value
				Me.SendPropertyChanged("Identidad")
				Me.OnIdentidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me.OnPacienteChanging(value)
				Me.SendPropertyChanging
				Me._Paciente = value
				Me.SendPropertyChanged("Paciente")
				Me.OnPacienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me.OnEdadChanging(value)
				Me.SendPropertyChanging
				Me._Edad = value
				Me.SendPropertyChanged("Edad")
				Me.OnEdadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me.OnSexoChanging(value)
				Me.SendPropertyChanging
				Me._Sexo = value
				Me.SendPropertyChanged("Sexo")
				Me.OnSexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me.OnReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._Referencia = value
				Me.SendPropertyChanged("Referencia")
				Me.OnReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me.OnN_MuestraChanging(value)
				Me.SendPropertyChanging
				Me._N_Muestra = value
				Me.SendPropertyChanged("N_Muestra")
				Me.OnN_MuestraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resultado", DbType:="VarChar(50)")>  _
	Public Property Resultado() As String
		Get
			Return Me._Resultado
		End Get
		Set
			If (String.Equals(Me._Resultado, value) = false) Then
				Me.OnResultadoChanging(value)
				Me.SendPropertyChanging
				Me._Resultado = value
				Me.SendPropertyChanged("Resultado")
				Me.OnResultadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nota", DbType:="VarChar(50)")>  _
	Public Property Nota() As String
		Get
			Return Me._Nota
		End Get
		Set
			If (String.Equals(Me._Nota, value) = false) Then
				Me.OnNotaChanging(value)
				Me.SendPropertyChanging
				Me._Nota = value
				Me.SendPropertyChanged("Nota")
				Me.OnNotaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.HPilory_Sangre")>  _
Partial Public Class HPilory_Sangre
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Resultado As String
	
	Private _Nota As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdentidadChanging(value As String)
    End Sub
    Partial Private Sub OnIdentidadChanged()
    End Sub
    Partial Private Sub OnPacienteChanging(value As String)
    End Sub
    Partial Private Sub OnPacienteChanged()
    End Sub
    Partial Private Sub OnEdadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEdadChanged()
    End Sub
    Partial Private Sub OnSexoChanging(value As String)
    End Sub
    Partial Private Sub OnSexoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnN_MuestraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnN_MuestraChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnResultadoChanging(value As String)
    End Sub
    Partial Private Sub OnResultadoChanged()
    End Sub
    Partial Private Sub OnNotaChanging(value As String)
    End Sub
    Partial Private Sub OnNotaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me.OnIdentidadChanging(value)
				Me.SendPropertyChanging
				Me._Identidad = value
				Me.SendPropertyChanged("Identidad")
				Me.OnIdentidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me.OnPacienteChanging(value)
				Me.SendPropertyChanging
				Me._Paciente = value
				Me.SendPropertyChanged("Paciente")
				Me.OnPacienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me.OnEdadChanging(value)
				Me.SendPropertyChanging
				Me._Edad = value
				Me.SendPropertyChanged("Edad")
				Me.OnEdadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me.OnSexoChanging(value)
				Me.SendPropertyChanging
				Me._Sexo = value
				Me.SendPropertyChanged("Sexo")
				Me.OnSexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me.OnReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._Referencia = value
				Me.SendPropertyChanged("Referencia")
				Me.OnReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me.OnN_MuestraChanging(value)
				Me.SendPropertyChanging
				Me._N_Muestra = value
				Me.SendPropertyChanged("N_Muestra")
				Me.OnN_MuestraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resultado", DbType:="VarChar(50)")>  _
	Public Property Resultado() As String
		Get
			Return Me._Resultado
		End Get
		Set
			If (String.Equals(Me._Resultado, value) = false) Then
				Me.OnResultadoChanging(value)
				Me.SendPropertyChanging
				Me._Resultado = value
				Me.SendPropertyChanged("Resultado")
				Me.OnResultadoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nota", DbType:="VarChar(50)")>  _
	Public Property Nota() As String
		Get
			Return Me._Nota
		End Get
		Set
			If (String.Equals(Me._Nota, value) = false) Then
				Me.OnNotaChanging(value)
				Me.SendPropertyChanging
				Me._Nota = value
				Me.SendPropertyChanged("Nota")
				Me.OnNotaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Quimica_Sanguinea")>  _
Partial Public Class Quimica_Sanguinea
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Examen As String
	
	Private _Resultado As String
	
	Private _Valor_Referencia As String
	
	Private _Nota As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me._N_Muestra = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me._Identidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me._Paciente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me._Edad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me._Sexo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me._Referencia = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me._Fecha = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Examen", DbType:="VarChar(50)")>  _
	Public Property Examen() As String
		Get
			Return Me._Examen
		End Get
		Set
			If (String.Equals(Me._Examen, value) = false) Then
				Me._Examen = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resultado", DbType:="VarChar(50)")>  _
	Public Property Resultado() As String
		Get
			Return Me._Resultado
		End Get
		Set
			If (String.Equals(Me._Resultado, value) = false) Then
				Me._Resultado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor_Referencia", DbType:="VarChar(50)")>  _
	Public Property Valor_Referencia() As String
		Get
			Return Me._Valor_Referencia
		End Get
		Set
			If (String.Equals(Me._Valor_Referencia, value) = false) Then
				Me._Valor_Referencia = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nota", DbType:="VarChar(MAX)")>  _
	Public Property Nota() As String
		Get
			Return Me._Nota
		End Get
		Set
			If (String.Equals(Me._Nota, value) = false) Then
				Me._Nota = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.PEspeciales")>  _
Partial Public Class PEspeciales
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Examen As String
	
	Private _Resultado As String
	
	Private _Valor_Referencia As String
	
	Private _Nota As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me._N_Muestra = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me._Identidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me._Paciente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me._Edad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me._Sexo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me._Referencia = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me._Fecha = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Examen", DbType:="VarChar(50)")>  _
	Public Property Examen() As String
		Get
			Return Me._Examen
		End Get
		Set
			If (String.Equals(Me._Examen, value) = false) Then
				Me._Examen = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resultado", DbType:="VarChar(50)")>  _
	Public Property Resultado() As String
		Get
			Return Me._Resultado
		End Get
		Set
			If (String.Equals(Me._Resultado, value) = false) Then
				Me._Resultado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor_Referencia", DbType:="VarChar(50)")>  _
	Public Property Valor_Referencia() As String
		Get
			Return Me._Valor_Referencia
		End Get
		Set
			If (String.Equals(Me._Valor_Referencia, value) = false) Then
				Me._Valor_Referencia = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nota", DbType:="VarChar(MAX)")>  _
	Public Property Nota() As String
		Get
			Return Me._Nota
		End Get
		Set
			If (String.Equals(Me._Nota, value) = false) Then
				Me._Nota = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.CTOG")>  _
Partial Public Class CTOG
	
	Private _N_Muestra As Integer
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Examen As String
	
	Private _Resultados As String
	
	Private _Valor_Referencia As String
	
	Private _Nota As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int NOT NULL")>  _
	Public Property N_Muestra() As Integer
		Get
			Return Me._N_Muestra
		End Get
		Set
			If ((Me._N_Muestra = value)  _
						= false) Then
				Me._N_Muestra = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me._Identidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me._Paciente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me._Edad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me._Sexo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me._Referencia = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me._Fecha = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Examen", DbType:="VarChar(50)")>  _
	Public Property Examen() As String
		Get
			Return Me._Examen
		End Get
		Set
			If (String.Equals(Me._Examen, value) = false) Then
				Me._Examen = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resultados", DbType:="VarChar(50)")>  _
	Public Property Resultados() As String
		Get
			Return Me._Resultados
		End Get
		Set
			If (String.Equals(Me._Resultados, value) = false) Then
				Me._Resultados = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Valor_Referencia", DbType:="VarChar(50)")>  _
	Public Property Valor_Referencia() As String
		Get
			Return Me._Valor_Referencia
		End Get
		Set
			If (String.Equals(Me._Valor_Referencia, value) = false) Then
				Me._Valor_Referencia = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nota", DbType:="VarChar(50)")>  _
	Public Property Nota() As String
		Get
			Return Me._Nota
		End Get
		Set
			If (String.Equals(Me._Nota, value) = false) Then
				Me._Nota = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Abuso_Drogas")>  _
Partial Public Class Abuso_Drogas
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Examen As String
	
	Private _Resultado As String
	
	Private _Observacion As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me._N_Muestra = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me._Identidad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me._Paciente = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me._Edad = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me._Sexo = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me._Referencia = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me._Fecha = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Examen", DbType:="VarChar(50)")>  _
	Public Property Examen() As String
		Get
			Return Me._Examen
		End Get
		Set
			If (String.Equals(Me._Examen, value) = false) Then
				Me._Examen = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Resultado", DbType:="VarChar(50)")>  _
	Public Property Resultado() As String
		Get
			Return Me._Resultado
		End Get
		Set
			If (String.Equals(Me._Resultado, value) = false) Then
				Me._Resultado = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Observacion", DbType:="VarChar(50)")>  _
	Public Property Observacion() As String
		Get
			Return Me._Observacion
		End Get
		Set
			If (String.Equals(Me._Observacion, value) = false) Then
				Me._Observacion = value
			End If
		End Set
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Orina")>  _
Partial Public Class Orina
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Identidad As String
	
	Private _Paciente As String
	
	Private _Edad As System.Nullable(Of Integer)
	
	Private _Sexo As String
	
	Private _Referencia As String
	
	Private _N_Muestra As System.Nullable(Of Integer)
	
	Private _Fecha As System.Nullable(Of Date)
	
	Private _Volumen As String
	
	Private _Color As String
	
	Private _Aspecto As String
	
	Private _Olor As String
	
	Private _Sedimento As String
	
	Private _QLeucocitos As String
	
	Private _Cetonas As String
	
	Private _Nitritos As String
	
	Private _Urobilinogeno As String
	
	Private _Bilirrubina As String
	
	Private _Proteinas As String
	
	Private _Glucosa As String
	
	Private _Densidad As String
	
	Private _PH As String
	
	Private _QEritrocitos As String
	
	Private _MLeucocitos As String
	
	Private _MEritrocitos As String
	
	Private _C_Epiteliales As String
	
	Private _Bacterias As String
	
	Private _Mocos As String
	
	Private _Cristales As String
	
	Private _Cilindros As String
	
	Private _Levaduras As String
	
	Private _Nota As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdentidadChanging(value As String)
    End Sub
    Partial Private Sub OnIdentidadChanged()
    End Sub
    Partial Private Sub OnPacienteChanging(value As String)
    End Sub
    Partial Private Sub OnPacienteChanged()
    End Sub
    Partial Private Sub OnEdadChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnEdadChanged()
    End Sub
    Partial Private Sub OnSexoChanging(value As String)
    End Sub
    Partial Private Sub OnSexoChanged()
    End Sub
    Partial Private Sub OnReferenciaChanging(value As String)
    End Sub
    Partial Private Sub OnReferenciaChanged()
    End Sub
    Partial Private Sub OnN_MuestraChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnN_MuestraChanged()
    End Sub
    Partial Private Sub OnFechaChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFechaChanged()
    End Sub
    Partial Private Sub OnVolumenChanging(value As String)
    End Sub
    Partial Private Sub OnVolumenChanged()
    End Sub
    Partial Private Sub OnColorChanging(value As String)
    End Sub
    Partial Private Sub OnColorChanged()
    End Sub
    Partial Private Sub OnAspectoChanging(value As String)
    End Sub
    Partial Private Sub OnAspectoChanged()
    End Sub
    Partial Private Sub OnOlorChanging(value As String)
    End Sub
    Partial Private Sub OnOlorChanged()
    End Sub
    Partial Private Sub OnSedimentoChanging(value As String)
    End Sub
    Partial Private Sub OnSedimentoChanged()
    End Sub
    Partial Private Sub OnQLeucocitosChanging(value As String)
    End Sub
    Partial Private Sub OnQLeucocitosChanged()
    End Sub
    Partial Private Sub OnCetonasChanging(value As String)
    End Sub
    Partial Private Sub OnCetonasChanged()
    End Sub
    Partial Private Sub OnNitritosChanging(value As String)
    End Sub
    Partial Private Sub OnNitritosChanged()
    End Sub
    Partial Private Sub OnUrobilinogenoChanging(value As String)
    End Sub
    Partial Private Sub OnUrobilinogenoChanged()
    End Sub
    Partial Private Sub OnBilirrubinaChanging(value As String)
    End Sub
    Partial Private Sub OnBilirrubinaChanged()
    End Sub
    Partial Private Sub OnProteinasChanging(value As String)
    End Sub
    Partial Private Sub OnProteinasChanged()
    End Sub
    Partial Private Sub OnGlucosaChanging(value As String)
    End Sub
    Partial Private Sub OnGlucosaChanged()
    End Sub
    Partial Private Sub OnDensidadChanging(value As String)
    End Sub
    Partial Private Sub OnDensidadChanged()
    End Sub
    Partial Private Sub OnPHChanging(value As String)
    End Sub
    Partial Private Sub OnPHChanged()
    End Sub
    Partial Private Sub OnQEritrocitosChanging(value As String)
    End Sub
    Partial Private Sub OnQEritrocitosChanged()
    End Sub
    Partial Private Sub OnMLeucocitosChanging(value As String)
    End Sub
    Partial Private Sub OnMLeucocitosChanged()
    End Sub
    Partial Private Sub OnMEritrocitosChanging(value As String)
    End Sub
    Partial Private Sub OnMEritrocitosChanged()
    End Sub
    Partial Private Sub OnC_EpitelialesChanging(value As String)
    End Sub
    Partial Private Sub OnC_EpitelialesChanged()
    End Sub
    Partial Private Sub OnBacteriasChanging(value As String)
    End Sub
    Partial Private Sub OnBacteriasChanged()
    End Sub
    Partial Private Sub OnMocosChanging(value As String)
    End Sub
    Partial Private Sub OnMocosChanged()
    End Sub
    Partial Private Sub OnCristalesChanging(value As String)
    End Sub
    Partial Private Sub OnCristalesChanged()
    End Sub
    Partial Private Sub OnCilindrosChanging(value As String)
    End Sub
    Partial Private Sub OnCilindrosChanged()
    End Sub
    Partial Private Sub OnLevadurasChanging(value As String)
    End Sub
    Partial Private Sub OnLevadurasChanged()
    End Sub
    Partial Private Sub OnNotaChanging(value As String)
    End Sub
    Partial Private Sub OnNotaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me.OnIdentidadChanging(value)
				Me.SendPropertyChanging
				Me._Identidad = value
				Me.SendPropertyChanged("Identidad")
				Me.OnIdentidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Paciente", DbType:="VarChar(50)")>  _
	Public Property Paciente() As String
		Get
			Return Me._Paciente
		End Get
		Set
			If (String.Equals(Me._Paciente, value) = false) Then
				Me.OnPacienteChanging(value)
				Me.SendPropertyChanging
				Me._Paciente = value
				Me.SendPropertyChanged("Paciente")
				Me.OnPacienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Edad", DbType:="Int")>  _
	Public Property Edad() As System.Nullable(Of Integer)
		Get
			Return Me._Edad
		End Get
		Set
			If (Me._Edad.Equals(value) = false) Then
				Me.OnEdadChanging(value)
				Me.SendPropertyChanging
				Me._Edad = value
				Me.SendPropertyChanged("Edad")
				Me.OnEdadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sexo", DbType:="VarChar(50)")>  _
	Public Property Sexo() As String
		Get
			Return Me._Sexo
		End Get
		Set
			If (String.Equals(Me._Sexo, value) = false) Then
				Me.OnSexoChanging(value)
				Me.SendPropertyChanging
				Me._Sexo = value
				Me.SendPropertyChanged("Sexo")
				Me.OnSexoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Referencia", DbType:="VarChar(50)")>  _
	Public Property Referencia() As String
		Get
			Return Me._Referencia
		End Get
		Set
			If (String.Equals(Me._Referencia, value) = false) Then
				Me.OnReferenciaChanging(value)
				Me.SendPropertyChanging
				Me._Referencia = value
				Me.SendPropertyChanged("Referencia")
				Me.OnReferenciaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_N_Muestra", DbType:="Int")>  _
	Public Property N_Muestra() As System.Nullable(Of Integer)
		Get
			Return Me._N_Muestra
		End Get
		Set
			If (Me._N_Muestra.Equals(value) = false) Then
				Me.OnN_MuestraChanging(value)
				Me.SendPropertyChanging
				Me._N_Muestra = value
				Me.SendPropertyChanged("N_Muestra")
				Me.OnN_MuestraChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha", DbType:="Date")>  _
	Public Property Fecha() As System.Nullable(Of Date)
		Get
			Return Me._Fecha
		End Get
		Set
			If (Me._Fecha.Equals(value) = false) Then
				Me.OnFechaChanging(value)
				Me.SendPropertyChanging
				Me._Fecha = value
				Me.SendPropertyChanged("Fecha")
				Me.OnFechaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Volumen", DbType:="VarChar(50)")>  _
	Public Property Volumen() As String
		Get
			Return Me._Volumen
		End Get
		Set
			If (String.Equals(Me._Volumen, value) = false) Then
				Me.OnVolumenChanging(value)
				Me.SendPropertyChanging
				Me._Volumen = value
				Me.SendPropertyChanged("Volumen")
				Me.OnVolumenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Color", DbType:="VarChar(50)")>  _
	Public Property Color() As String
		Get
			Return Me._Color
		End Get
		Set
			If (String.Equals(Me._Color, value) = false) Then
				Me.OnColorChanging(value)
				Me.SendPropertyChanging
				Me._Color = value
				Me.SendPropertyChanged("Color")
				Me.OnColorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Aspecto", DbType:="VarChar(50)")>  _
	Public Property Aspecto() As String
		Get
			Return Me._Aspecto
		End Get
		Set
			If (String.Equals(Me._Aspecto, value) = false) Then
				Me.OnAspectoChanging(value)
				Me.SendPropertyChanging
				Me._Aspecto = value
				Me.SendPropertyChanged("Aspecto")
				Me.OnAspectoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Olor", DbType:="VarChar(50)")>  _
	Public Property Olor() As String
		Get
			Return Me._Olor
		End Get
		Set
			If (String.Equals(Me._Olor, value) = false) Then
				Me.OnOlorChanging(value)
				Me.SendPropertyChanging
				Me._Olor = value
				Me.SendPropertyChanged("Olor")
				Me.OnOlorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Sedimento", DbType:="VarChar(50)")>  _
	Public Property Sedimento() As String
		Get
			Return Me._Sedimento
		End Get
		Set
			If (String.Equals(Me._Sedimento, value) = false) Then
				Me.OnSedimentoChanging(value)
				Me.SendPropertyChanging
				Me._Sedimento = value
				Me.SendPropertyChanged("Sedimento")
				Me.OnSedimentoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QLeucocitos", DbType:="VarChar(50)")>  _
	Public Property QLeucocitos() As String
		Get
			Return Me._QLeucocitos
		End Get
		Set
			If (String.Equals(Me._QLeucocitos, value) = false) Then
				Me.OnQLeucocitosChanging(value)
				Me.SendPropertyChanging
				Me._QLeucocitos = value
				Me.SendPropertyChanged("QLeucocitos")
				Me.OnQLeucocitosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cetonas", DbType:="VarChar(50)")>  _
	Public Property Cetonas() As String
		Get
			Return Me._Cetonas
		End Get
		Set
			If (String.Equals(Me._Cetonas, value) = false) Then
				Me.OnCetonasChanging(value)
				Me.SendPropertyChanging
				Me._Cetonas = value
				Me.SendPropertyChanged("Cetonas")
				Me.OnCetonasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nitritos", DbType:="VarChar(50)")>  _
	Public Property Nitritos() As String
		Get
			Return Me._Nitritos
		End Get
		Set
			If (String.Equals(Me._Nitritos, value) = false) Then
				Me.OnNitritosChanging(value)
				Me.SendPropertyChanging
				Me._Nitritos = value
				Me.SendPropertyChanged("Nitritos")
				Me.OnNitritosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Urobilinogeno", DbType:="VarChar(50)")>  _
	Public Property Urobilinogeno() As String
		Get
			Return Me._Urobilinogeno
		End Get
		Set
			If (String.Equals(Me._Urobilinogeno, value) = false) Then
				Me.OnUrobilinogenoChanging(value)
				Me.SendPropertyChanging
				Me._Urobilinogeno = value
				Me.SendPropertyChanged("Urobilinogeno")
				Me.OnUrobilinogenoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bilirrubina", DbType:="VarChar(50)")>  _
	Public Property Bilirrubina() As String
		Get
			Return Me._Bilirrubina
		End Get
		Set
			If (String.Equals(Me._Bilirrubina, value) = false) Then
				Me.OnBilirrubinaChanging(value)
				Me.SendPropertyChanging
				Me._Bilirrubina = value
				Me.SendPropertyChanged("Bilirrubina")
				Me.OnBilirrubinaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Proteinas", DbType:="VarChar(50)")>  _
	Public Property Proteinas() As String
		Get
			Return Me._Proteinas
		End Get
		Set
			If (String.Equals(Me._Proteinas, value) = false) Then
				Me.OnProteinasChanging(value)
				Me.SendPropertyChanging
				Me._Proteinas = value
				Me.SendPropertyChanged("Proteinas")
				Me.OnProteinasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Glucosa", DbType:="VarChar(50)")>  _
	Public Property Glucosa() As String
		Get
			Return Me._Glucosa
		End Get
		Set
			If (String.Equals(Me._Glucosa, value) = false) Then
				Me.OnGlucosaChanging(value)
				Me.SendPropertyChanging
				Me._Glucosa = value
				Me.SendPropertyChanged("Glucosa")
				Me.OnGlucosaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Densidad", DbType:="VarChar(50)")>  _
	Public Property Densidad() As String
		Get
			Return Me._Densidad
		End Get
		Set
			If (String.Equals(Me._Densidad, value) = false) Then
				Me.OnDensidadChanging(value)
				Me.SendPropertyChanging
				Me._Densidad = value
				Me.SendPropertyChanged("Densidad")
				Me.OnDensidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PH", DbType:="VarChar(50)")>  _
	Public Property PH() As String
		Get
			Return Me._PH
		End Get
		Set
			If (String.Equals(Me._PH, value) = false) Then
				Me.OnPHChanging(value)
				Me.SendPropertyChanging
				Me._PH = value
				Me.SendPropertyChanged("PH")
				Me.OnPHChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QEritrocitos", DbType:="VarChar(50)")>  _
	Public Property QEritrocitos() As String
		Get
			Return Me._QEritrocitos
		End Get
		Set
			If (String.Equals(Me._QEritrocitos, value) = false) Then
				Me.OnQEritrocitosChanging(value)
				Me.SendPropertyChanging
				Me._QEritrocitos = value
				Me.SendPropertyChanged("QEritrocitos")
				Me.OnQEritrocitosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MLeucocitos", DbType:="VarChar(50)")>  _
	Public Property MLeucocitos() As String
		Get
			Return Me._MLeucocitos
		End Get
		Set
			If (String.Equals(Me._MLeucocitos, value) = false) Then
				Me.OnMLeucocitosChanging(value)
				Me.SendPropertyChanging
				Me._MLeucocitos = value
				Me.SendPropertyChanged("MLeucocitos")
				Me.OnMLeucocitosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MEritrocitos", DbType:="VarChar(50)")>  _
	Public Property MEritrocitos() As String
		Get
			Return Me._MEritrocitos
		End Get
		Set
			If (String.Equals(Me._MEritrocitos, value) = false) Then
				Me.OnMEritrocitosChanging(value)
				Me.SendPropertyChanging
				Me._MEritrocitos = value
				Me.SendPropertyChanged("MEritrocitos")
				Me.OnMEritrocitosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_C_Epiteliales", DbType:="VarChar(50)")>  _
	Public Property C_Epiteliales() As String
		Get
			Return Me._C_Epiteliales
		End Get
		Set
			If (String.Equals(Me._C_Epiteliales, value) = false) Then
				Me.OnC_EpitelialesChanging(value)
				Me.SendPropertyChanging
				Me._C_Epiteliales = value
				Me.SendPropertyChanged("C_Epiteliales")
				Me.OnC_EpitelialesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Bacterias", DbType:="VarChar(50)")>  _
	Public Property Bacterias() As String
		Get
			Return Me._Bacterias
		End Get
		Set
			If (String.Equals(Me._Bacterias, value) = false) Then
				Me.OnBacteriasChanging(value)
				Me.SendPropertyChanging
				Me._Bacterias = value
				Me.SendPropertyChanged("Bacterias")
				Me.OnBacteriasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Mocos", DbType:="VarChar(50)")>  _
	Public Property Mocos() As String
		Get
			Return Me._Mocos
		End Get
		Set
			If (String.Equals(Me._Mocos, value) = false) Then
				Me.OnMocosChanging(value)
				Me.SendPropertyChanging
				Me._Mocos = value
				Me.SendPropertyChanged("Mocos")
				Me.OnMocosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cristales", DbType:="VarChar(50)")>  _
	Public Property Cristales() As String
		Get
			Return Me._Cristales
		End Get
		Set
			If (String.Equals(Me._Cristales, value) = false) Then
				Me.OnCristalesChanging(value)
				Me.SendPropertyChanging
				Me._Cristales = value
				Me.SendPropertyChanged("Cristales")
				Me.OnCristalesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Cilindros", DbType:="VarChar(50)")>  _
	Public Property Cilindros() As String
		Get
			Return Me._Cilindros
		End Get
		Set
			If (String.Equals(Me._Cilindros, value) = false) Then
				Me.OnCilindrosChanging(value)
				Me.SendPropertyChanging
				Me._Cilindros = value
				Me.SendPropertyChanged("Cilindros")
				Me.OnCilindrosChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Levaduras", DbType:="VarChar(50)")>  _
	Public Property Levaduras() As String
		Get
			Return Me._Levaduras
		End Get
		Set
			If (String.Equals(Me._Levaduras, value) = false) Then
				Me.OnLevadurasChanging(value)
				Me.SendPropertyChanging
				Me._Levaduras = value
				Me.SendPropertyChanged("Levaduras")
				Me.OnLevadurasChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Nota", DbType:="VarChar(MAX)")>  _
	Public Property Nota() As String
		Get
			Return Me._Nota
		End Get
		Set
			If (String.Equals(Me._Nota, value) = false) Then
				Me.OnNotaChanging(value)
				Me.SendPropertyChanging
				Me._Nota = value
				Me.SendPropertyChanged("Nota")
				Me.OnNotaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
