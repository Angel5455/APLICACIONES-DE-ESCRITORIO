<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnEnviar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA5BJREFUSEutl0tME2EQx3vUGy9RDAgBxUcQ6FKgr22VErRFAsbExMSjBo0HuRgT
        TfSghkQvJCaIRo0aE4nowUSDLZTKQ4yakKCRVECJCvaxu5zwgodxZndr22VbdguT/NOv2/nmt9/M981u
        DVos3GwvDXvY9rDH0Rdys9M4XsIxSGKXpGuOPtEHfeVpmVvUbS8Pux2dGDQY8jiW4zB1yT5BmkNz5TDa
        bc7p3EB3H/KwM8rgWiXNZdsplhw2vc23uXLxzm9pWeFqohgUi2LK4dWNHDBNT9SCrEkYMyWcUkJ3pzpx
        HUSxVdMu1XTt6U0lKTbbLuMkox24lo2kVcRI2u3ykVF11i234lMpZElQsTng2VNz0iMCHbZB9Mpu4LpL
        IXKaUfcjFjWZdaktQVvtwHVtB2EkG4S3WRB6ugWm2+ogpFj5/1rjF2x1yT/qEgVuYYG7UQ7CMEIRvDiW
        DQvP82HYXQWfGiwEU87rM8h9VvmDFLCZRcljNR/SIRai13aB8CZHWu1oNnCDuTDRsQN8NgYGUBMN9bDg
        xljyHGJSqhMaviwERU6YgLtdAtzNMogcr8drzmQfEt5U9PIeEIYQikARiuPJ82XgszMiOKaP++pgHuER
        cS67RKleGRBTx98vBmE8C4SxLOAfF0LkmHnFyqMXKkDA1cWgfCAHPl8qhQHWmASN6Z2zFn4etIvwlGDu
        HoIRGksf/2AbRI5aJDgqeq4SBF+eBCUfrO/U1RIYcCLUuhJK8qLGHLXw/YCNwClSfdIE/IvNGDgO5+6U
        QPiIFaJnq0Ho3xSHooLXi2Fwf2poogIs8yft5oqcYYB/lZ8E4B8VAf8y4Rp+TncVgd9VrQkqayb9caKU
        duDqXiesjj4TxrPdhTDUVKUHSil/RqlO30DU6olaxPHc3a0QwLPq1QO1Gv/6rMZTmlumuIP9uINxwy2i
        fjwsgOGWSl1QEvp/9VuZMqlfa3lI0Jm9WAHh3gIxvSNte8FrUQ+eTrhi6SFBpuex+KvVCu9dJl01jclr
        M876raadMlayVWudIOpA1AapHaoB1ITQZbG2StP76kONf6rRgmeyRmwMarAkWZmecbN5o4xLtkxe9r41
        2WDUgalXg8XVG3DW5MkYddP7ekt9l/rvB3wIKIFSepmeVaExo7RLNdf+HvYb6z7pMoPfXhODzlJNA1pf
        6BMtk78wXxrNwUE709mv3L2Z2Pr/aTMY/gH31fP9IWRRfAAAAABJRU5ErkJggg==
</value>
  </data>
</root>