<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        30sY+zcH5Hen+VlBSQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="BtnEnviar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA5NJREFUSEutl01sDGEYx/fIrdUqlaLZ+k5ptdV2u7strZQqUZFIJI5ExYGLSEg4
        IE24SCS+giASohwkhH4rRZBIkEhVEZ/t7uz0xKUOj/9/dmc7M/tuO6Pe5JeZzDzv85v3c9/1qcrwumon
        frATtIIB8AtIAt7zGd8xhrG2+hMWZwWwALSAfjAKTFk6GMNY1mFdWz5lcQRNAfz6D0AlcAPrMgdzJXPb
        ivUFyAJngJsWTgRzMBdzJh3JYnnIgOtAlWQyMGdS7pSyS/h1qor/A+ZOdrtVzPH4H92bDuamwybmDJzM
        RHILHcZsN8Wc/qpA7zQ4rqnQZYi54Ln2VEHuoWhTUKJHFot22i+RXSXquLjLT/Hkx5bSjSHRTs4T/VGm
        6E8yZOjmTBloKpeh1JYbY00xtzrnS/cw8YawaCcWiN4LKcQjfZny43aO9DYUyZvagAyl1mulmPus80U8
        YWMYJO5VMWR9WKLHFon+cFq8tY8zRevMkld750t7sEQ6wKvaCvnRgFxj9QYotm74cSCKbC8T7Vy+aKcK
        JLKtAs9q7DEEHxU9vET0bkghNKS4f72/QNpDJYbY5OXKcvkOeSRe9xfFqQnRdbFLc0V/miF6X4bEruVJ
        ZGtlSsujBwpFR+tMaaxnmrw95JeO8HKb1ORZzQr5ujZkyNOKtYsQQ2p2X+zyHIlsCcTlILpvmejt2XEp
        YzC+747mS0cNpFWpUtIG+qpXyKc1QUOs7uodZRK7MwOJx+Ta+XwZ3lwl0T3Fot+fPiYF/cfnSueq9FIr
        PeHS3+NOrsjuEondy7EJYldnS+yu5RmuAydnS1ddsStpgg8Up19O7NK9aN0DS+t4tdwPns6T7voiL1Jy
        i+LxNxDVeIIR3H++MEt6sFbbvEn/gGaKXW2ZxgzuwgzGhBsBX67kSu+GZV6l5D3WdgHFZOIfCa7Zg4Uy
        fCPX6N5HTUulLaBMPBEtdyqLvf8sfttYJc/ryryOqckgWrsQ1387CHAH4jbI7dCReDxGQTOGxtcVKrWJ
        PR19uPG/Wx3gmjQ2BodExVl86FTg6wyhxY5zl+fD3sf6oDyuRterZSY3IMymlCQLEjjlro+33He5/77A
        j4BCyO5lS7Nx9RH0UMKaKEhixfOB/ifG/XVdpWD8TOkgaIZ0CltpSDm2qoIETjz/hcG493eGSlsgWsiJ
        ZHZvSktVBQmcuP7TpjXW+Guzs4yZS5ITyVZ8vr/JzWw5YC1NHAAAAABJRU5ErkJggg==
</value>
  </data>
</root>