'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.17929
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="OFICIALIA")>  _
Partial Public Class DataClasses1DataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Definiciones de métodos de extensibilidad"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertSeguridad(instance As Seguridad)
    End Sub
  Partial Private Sub UpdateSeguridad(instance As Seguridad)
    End Sub
  Partial Private Sub DeleteSeguridad(instance As Seguridad)
    End Sub
  Partial Private Sub InsertSolicitudes(instance As Solicitudes)
    End Sub
  Partial Private Sub UpdateSolicitudes(instance As Solicitudes)
    End Sub
  Partial Private Sub DeleteSolicitudes(instance As Solicitudes)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.Oficialia.My.MySettings.Default.OFICIALIAConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Seguridad() As System.Data.Linq.Table(Of Seguridad)
		Get
			Return Me.GetTable(Of Seguridad)
		End Get
	End Property
	
	Public ReadOnly Property Solicitudes() As System.Data.Linq.Table(Of Solicitudes)
		Get
			Return Me.GetTable(Of Solicitudes)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Seguridad")>  _
Partial Public Class Seguridad
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As String
	
	Private _Usuario As String
	
	Private _Contraseña As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As String)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnUsuarioChanging(value As String)
    End Sub
    Partial Private Sub OnUsuarioChanged()
    End Sub
    Partial Private Sub OnContraseñaChanging(value As String)
    End Sub
    Partial Private Sub OnContraseñaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="VarChar(50) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property Id() As String
		Get
			Return Me._Id
		End Get
		Set
			If (String.Equals(Me._Id, value) = false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Usuario", DbType:="VarChar(50)")>  _
	Public Property Usuario() As String
		Get
			Return Me._Usuario
		End Get
		Set
			If (String.Equals(Me._Usuario, value) = false) Then
				Me.OnUsuarioChanging(value)
				Me.SendPropertyChanging
				Me._Usuario = value
				Me.SendPropertyChanged("Usuario")
				Me.OnUsuarioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Contraseña", DbType:="VarChar(50)")>  _
	Public Property Contraseña() As String
		Get
			Return Me._Contraseña
		End Get
		Set
			If (String.Equals(Me._Contraseña, value) = false) Then
				Me.OnContraseñaChanging(value)
				Me.SendPropertyChanging
				Me._Contraseña = value
				Me.SendPropertyChanged("Contraseña")
				Me.OnContraseñaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Solicitudes")>  _
Partial Public Class Solicitudes
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _Id As Integer
	
	Private _Identidad As String
	
	Private _Expediente As String
	
	Private _TGR As String
	
	Private _Solicitante As String
	
	Private _Persona_Inscrita As String
	
	Private _Tipo_Solicitud As String
	
	Private _Fecha_Solicitud As String
	
	Private _Fecha_Resolucion As String
	
	Private _Fecha_Envio As String
	
	Private _Fecha_Remision As String
	
	Private _Auto As String
	
	Private _Caja As System.Nullable(Of Integer)
	
	Private _FechaS As String
	
	Private _FechaRs As String
	
	Private _FechaE As String
	
	Private _FechaRm As String
	
    #Region "Definiciones de métodos de extensibilidad"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIdChanging(value As Integer)
    End Sub
    Partial Private Sub OnIdChanged()
    End Sub
    Partial Private Sub OnIdentidadChanging(value As String)
    End Sub
    Partial Private Sub OnIdentidadChanged()
    End Sub
    Partial Private Sub OnExpedienteChanging(value As String)
    End Sub
    Partial Private Sub OnExpedienteChanged()
    End Sub
    Partial Private Sub OnTGRChanging(value As String)
    End Sub
    Partial Private Sub OnTGRChanged()
    End Sub
    Partial Private Sub OnSolicitanteChanging(value As String)
    End Sub
    Partial Private Sub OnSolicitanteChanged()
    End Sub
    Partial Private Sub OnPersona_InscritaChanging(value As String)
    End Sub
    Partial Private Sub OnPersona_InscritaChanged()
    End Sub
    Partial Private Sub OnTipo_SolicitudChanging(value As String)
    End Sub
    Partial Private Sub OnTipo_SolicitudChanged()
    End Sub
    Partial Private Sub OnFecha_SolicitudChanging(value As String)
    End Sub
    Partial Private Sub OnFecha_SolicitudChanged()
    End Sub
    Partial Private Sub OnFecha_ResolucionChanging(value As String)
    End Sub
    Partial Private Sub OnFecha_ResolucionChanged()
    End Sub
    Partial Private Sub OnFecha_EnvioChanging(value As String)
    End Sub
    Partial Private Sub OnFecha_EnvioChanged()
    End Sub
    Partial Private Sub OnFecha_RemisionChanging(value As String)
    End Sub
    Partial Private Sub OnFecha_RemisionChanged()
    End Sub
    Partial Private Sub OnAutoChanging(value As String)
    End Sub
    Partial Private Sub OnAutoChanged()
    End Sub
    Partial Private Sub OnCajaChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnCajaChanged()
    End Sub
    Partial Private Sub OnFechaSChanging(value As String)
    End Sub
    Partial Private Sub OnFechaSChanged()
    End Sub
    Partial Private Sub OnFechaRsChanging(value As String)
    End Sub
    Partial Private Sub OnFechaRsChanged()
    End Sub
    Partial Private Sub OnFechaEChanging(value As String)
    End Sub
    Partial Private Sub OnFechaEChanged()
    End Sub
    Partial Private Sub OnFechaRmChanging(value As String)
    End Sub
    Partial Private Sub OnFechaRmChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Id", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property Id() As Integer
		Get
			Return Me._Id
		End Get
		Set
			If ((Me._Id = value)  _
						= false) Then
				Me.OnIdChanging(value)
				Me.SendPropertyChanging
				Me._Id = value
				Me.SendPropertyChanged("Id")
				Me.OnIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Identidad", DbType:="VarChar(50)")>  _
	Public Property Identidad() As String
		Get
			Return Me._Identidad
		End Get
		Set
			If (String.Equals(Me._Identidad, value) = false) Then
				Me.OnIdentidadChanging(value)
				Me.SendPropertyChanging
				Me._Identidad = value
				Me.SendPropertyChanged("Identidad")
				Me.OnIdentidadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Expediente", DbType:="VarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property Expediente() As String
		Get
			Return Me._Expediente
		End Get
		Set
			If (String.Equals(Me._Expediente, value) = false) Then
				Me.OnExpedienteChanging(value)
				Me.SendPropertyChanging
				Me._Expediente = value
				Me.SendPropertyChanged("Expediente")
				Me.OnExpedienteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_TGR", DbType:="VarChar(50)")>  _
	Public Property TGR() As String
		Get
			Return Me._TGR
		End Get
		Set
			If (String.Equals(Me._TGR, value) = false) Then
				Me.OnTGRChanging(value)
				Me.SendPropertyChanging
				Me._TGR = value
				Me.SendPropertyChanged("TGR")
				Me.OnTGRChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Solicitante", DbType:="VarChar(50)")>  _
	Public Property Solicitante() As String
		Get
			Return Me._Solicitante
		End Get
		Set
			If (String.Equals(Me._Solicitante, value) = false) Then
				Me.OnSolicitanteChanging(value)
				Me.SendPropertyChanging
				Me._Solicitante = value
				Me.SendPropertyChanged("Solicitante")
				Me.OnSolicitanteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Persona_Inscrita", DbType:="VarChar(50)")>  _
	Public Property Persona_Inscrita() As String
		Get
			Return Me._Persona_Inscrita
		End Get
		Set
			If (String.Equals(Me._Persona_Inscrita, value) = false) Then
				Me.OnPersona_InscritaChanging(value)
				Me.SendPropertyChanging
				Me._Persona_Inscrita = value
				Me.SendPropertyChanged("Persona_Inscrita")
				Me.OnPersona_InscritaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Tipo_Solicitud", DbType:="VarChar(50)")>  _
	Public Property Tipo_Solicitud() As String
		Get
			Return Me._Tipo_Solicitud
		End Get
		Set
			If (String.Equals(Me._Tipo_Solicitud, value) = false) Then
				Me.OnTipo_SolicitudChanging(value)
				Me.SendPropertyChanging
				Me._Tipo_Solicitud = value
				Me.SendPropertyChanged("Tipo_Solicitud")
				Me.OnTipo_SolicitudChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Solicitud", DbType:="VarChar(50)")>  _
	Public Property Fecha_Solicitud() As String
		Get
			Return Me._Fecha_Solicitud
		End Get
		Set
			If (String.Equals(Me._Fecha_Solicitud, value) = false) Then
				Me.OnFecha_SolicitudChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Solicitud = value
				Me.SendPropertyChanged("Fecha_Solicitud")
				Me.OnFecha_SolicitudChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Resolucion", DbType:="VarChar(50)")>  _
	Public Property Fecha_Resolucion() As String
		Get
			Return Me._Fecha_Resolucion
		End Get
		Set
			If (String.Equals(Me._Fecha_Resolucion, value) = false) Then
				Me.OnFecha_ResolucionChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Resolucion = value
				Me.SendPropertyChanged("Fecha_Resolucion")
				Me.OnFecha_ResolucionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Envio", DbType:="VarChar(50)")>  _
	Public Property Fecha_Envio() As String
		Get
			Return Me._Fecha_Envio
		End Get
		Set
			If (String.Equals(Me._Fecha_Envio, value) = false) Then
				Me.OnFecha_EnvioChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Envio = value
				Me.SendPropertyChanged("Fecha_Envio")
				Me.OnFecha_EnvioChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fecha_Remision", DbType:="VarChar(50)")>  _
	Public Property Fecha_Remision() As String
		Get
			Return Me._Fecha_Remision
		End Get
		Set
			If (String.Equals(Me._Fecha_Remision, value) = false) Then
				Me.OnFecha_RemisionChanging(value)
				Me.SendPropertyChanging
				Me._Fecha_Remision = value
				Me.SendPropertyChanged("Fecha_Remision")
				Me.OnFecha_RemisionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="Auto", Storage:="_Auto", DbType:="VarChar(50)")>  _
	Public Property [Auto]() As String
		Get
			Return Me._Auto
		End Get
		Set
			If (String.Equals(Me._Auto, value) = false) Then
				Me.OnAutoChanging(value)
				Me.SendPropertyChanging
				Me._Auto = value
				Me.SendPropertyChanged("[Auto]")
				Me.OnAutoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Caja", DbType:="Int")>  _
	Public Property Caja() As System.Nullable(Of Integer)
		Get
			Return Me._Caja
		End Get
		Set
			If (Me._Caja.Equals(value) = false) Then
				Me.OnCajaChanging(value)
				Me.SendPropertyChanging
				Me._Caja = value
				Me.SendPropertyChanged("Caja")
				Me.OnCajaChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaS", DbType:="VarChar(50)")>  _
	Public Property FechaS() As String
		Get
			Return Me._FechaS
		End Get
		Set
			If (String.Equals(Me._FechaS, value) = false) Then
				Me.OnFechaSChanging(value)
				Me.SendPropertyChanging
				Me._FechaS = value
				Me.SendPropertyChanged("FechaS")
				Me.OnFechaSChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaRs", DbType:="VarChar(50)")>  _
	Public Property FechaRs() As String
		Get
			Return Me._FechaRs
		End Get
		Set
			If (String.Equals(Me._FechaRs, value) = false) Then
				Me.OnFechaRsChanging(value)
				Me.SendPropertyChanging
				Me._FechaRs = value
				Me.SendPropertyChanged("FechaRs")
				Me.OnFechaRsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaE", DbType:="VarChar(50)")>  _
	Public Property FechaE() As String
		Get
			Return Me._FechaE
		End Get
		Set
			If (String.Equals(Me._FechaE, value) = false) Then
				Me.OnFechaEChanging(value)
				Me.SendPropertyChanging
				Me._FechaE = value
				Me.SendPropertyChanged("FechaE")
				Me.OnFechaEChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FechaRm", DbType:="VarChar(50)")>  _
	Public Property FechaRm() As String
		Get
			Return Me._FechaRm
		End Get
		Set
			If (String.Equals(Me._FechaRm, value) = false) Then
				Me.OnFechaRmChanging(value)
				Me.SendPropertyChanging
				Me._FechaRm = value
				Me.SendPropertyChanged("FechaRm")
				Me.OnFechaRmChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
